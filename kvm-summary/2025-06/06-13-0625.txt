From 9ad4a59cf to 92019bd32
KVM mailing list update from 9ad4a59cf to 92019bd32

Top 15 contributor Email domains (Based on Email Body)

     62 google.com
     21 kernel.org
     18 redhat.com
     18 intel.com
      3 arm.com
      2 rivosinc.com
      2 linux.intel.com
      1 uniontech.com
      1 grsecurity.net

Top 15 contributors (Based on Email Body)

     62  Sean Christopherson <seanjc@google.com>
     21  Mauro Carvalho Chehab <mchehab+huawei@kernel.org>
     13  John Snow <jsnow@redhat.com>
      9  Sohil Mehta <sohil.mehta@intel.com>
      6  Chenyi Qiang <chenyi.qiang@intel.com>
      3  Chao Gao <chao.gao@intel.com>
      3  Anshuman Khandual <anshuman.khandual@arm.com>
      2  Maxim Levitsky <mlevitsk@redhat.com>
      2  Jesse Taube <jesse@rivosinc.com>
      2  Jason Wang <jasowang@redhat.com>
      1  Zhenghan Cheng <chengzhenghan@uniontech.com>
      1  Paolo Bonzini <pbonzini@redhat.com>
      1  Mathias Krause <minipli@grsecurity.net>
      1  "Kirill A. Shutemov" <kirill.shutemov@linux.intel.com>
      1  Jacob Pan <jacob.jun.pan@linux.intel.com>

===== Patch list in this time period =====


===== Patch Commit Messages ====

New:  x86/fred: Provide separate IRQ vs. NMI wrappers for entry from KVM
[PATCH v7 01/10] x86/fred: Provide separate IRQ vs. NMI wrappers for entry from KVM
Author: Sohil Mehta <sohil.mehta@intel.com>


Provide separate wrappers for forwarding IRQs vs NMIs from KVM in
anticipation of adding support for NMI source reporting, which will add
an NMI-only parameter, i.e. will further pollute the current API with a
param that is a hardcoded for one of the two call sites.

Opportunistically tag the non-FRED NMI wrapper __always_inline, as the
compiler could theoretically generate a function call and trigger and a
(completely benign) "leaving noinstr" warning.

Signed-off-by: Sean Christopherson <seanjc@google.com>
Signed-off-by: Sohil Mehta <sohil.mehta@intel.com>
---
v7: New patch
---
 arch/x86/include/asm/fred.h | 30 ++++++++++++++++++++++--------
 arch/x86/kvm/vmx/vmx.c      |  4 ++--
 2 files changed, 24 insertions(+), 10 deletions(-)

----------------------------------------------------------------------

New:  x86: Add support for NMI-source reporting with FRED
[PATCH v7 00/10] x86: Add support for NMI-source reporting with FRED
Author: Sohil Mehta <sohil.mehta@intel.com>

Changes since v6
================
This series is a minor update from v6, with the following changes:

 * Includes a pre-patch to provide separate KVM IRQ and NMI entry
   wrappers for FRED (Sean).
 * Uses an enum to allocate NMI-source vectors (DaveH).
 * Picks up review tags from Xin.
 * Rebased on top of 6.16-rc1.

The patchset seems to be maturing, so while reviewing this version, please 
consider providing Acks and Review tags if the patches look okay.

v6: https://lore.kernel.org/lkml/20250513203803.2636561-1-sohil.mehta@intel.com/

Background
==========
NMI-source reporting with FRED [1] provides a new mechanism for
identifying the source of NMIs. As part of the FRED event delivery
framework, a 16-bit vector bitmap is provided that identifies one or
more sources that caused the NMI.

Using the source bitmap, the kernel can precisely run the relevant NMI
handlers instead of polling the entire NMI handler list. Additionally,
the source information would be invaluable for debugging misbehaving
handlers and unknown NMIs.

Overview of NMI-source usage
============================
Code snippets:

// Allocate a static source vector at compile time
#define NMIS_VECTOR_TEST	1

// Register an NMI handler with the vector
register_nmi_handler(NMI_LOCAL, test_handler, 0, "nmi_test", NMIS_VECTOR_TEST);

// Generate an NMI with the source vector using NMI encoded delivery
__apic_send_IPI_mask(cpumask, APIC_DM_NMI | NMIS_VECTOR_TEST);

// Handle an NMI with or without the source information (oversimplified)
source_bitmap = fred_event_data(regs);
if (!source_bitmap || (source_bitmap & BIT(NMIS_VECTOR_TEST)))
	test_handler();

// Unregister handler along with the vector
unregister_nmi_handler(NMI_LOCAL, "nmi_test");

Patch structure
===============
Patch 1-3: Prepare FRED/KVM and enumerate NMI-source reporting
Patch 4-6: Register and handle NMI-source vectors 
Patch 7-9: APIC changes to generate NMIs with vectors
Patch  10: Improve debug print with NMI-source information

Many thanks to Sean Christopherson, Xin Li, H. Peter Anvin, Andi Kleen,
Tony Luck, Kan Liang, Jacob Pan Jun, Zeng Guang, Peter Zijlstra,
Sandipan Das, Steven Rostedt, Dave Hansen and others for their
contributions, reviews and feedback.

Future work
===========
I am considering a few additional changes related to debugging and
tracing, as well as KVM support, that would be valuable for enhancing
NMI handling in the kernel.

Refer the v6 cover letter for more details:
v6: https://lore.kernel.org/lkml/20250513203803.2636561-1-sohil.mehta@intel.com/

Links
=====
[1]: Chapter 9, https://www.intel.com/content/www/us/en/content-details/819481/flexible-return-and-event-delivery-fred-specification.html

Jacob Pan (1):
  perf/x86: Enable NMI-source reporting for perfmon

Sean Christopherson (1):
  x86/fred: Provide separate IRQ vs. NMI wrappers for entry from KVM

Sohil Mehta (8):
  x86/fred: Pass event data to the NMI entry point from KVM
  x86/cpufeatures: Add the CPUID feature bit for NMI-source reporting
  x86/nmi: Extend the registration interface to include the NMI-source
    vector
  x86/nmi: Assign and register NMI-source vectors
  x86/nmi: Add support to handle NMIs with source information
  x86/nmi: Prepare for the new NMI-source vector encoding
  x86/nmi: Enable NMI-source for IPIs delivered as NMIs
  x86/nmi: Print source information with the unknown NMI console message

 arch/x86/entry/entry_64_fred.S      |  2 +-
 arch/x86/events/amd/ibs.c           |  2 +-
 arch/x86/events/core.c              |  6 +--
 arch/x86/events/intel/core.c        |  6 +--
 arch/x86/include/asm/apic.h         | 39 ++++++++++++++++++
 arch/x86/include/asm/apicdef.h      |  2 +-
 arch/x86/include/asm/cpufeatures.h  |  1 +
 arch/x86/include/asm/fred.h         | 35 +++++++++++-----
 arch/x86/include/asm/nmi.h          | 62 ++++++++++++++++++++++++++++-
 arch/x86/kernel/apic/hw_nmi.c       |  5 +--
 arch/x86/kernel/apic/ipi.c          |  4 +-
 arch/x86/kernel/apic/local.h        | 24 ++++++-----
 arch/x86/kernel/cpu/cpuid-deps.c    |  1 +
 arch/x86/kernel/cpu/mce/inject.c    |  4 +-
 arch/x86/kernel/cpu/mshyperv.c      |  2 +-
 arch/x86/kernel/kgdb.c              |  8 ++--
 arch/x86/kernel/kvm.c               |  9 +----
 arch/x86/kernel/nmi.c               | 40 +++++++++++++++++++
 arch/x86/kernel/nmi_selftest.c      |  8 ++--
 arch/x86/kernel/smp.c               |  6 +--
 arch/x86/kvm/vmx/vmx.c              |  4 +-
 arch/x86/platform/uv/uv_nmi.c       |  4 +-
 drivers/acpi/apei/ghes.c            |  2 +-
 drivers/char/ipmi/ipmi_watchdog.c   |  3 +-
 drivers/edac/igen6_edac.c           |  3 +-
 drivers/thermal/intel/therm_throt.c |  2 +-
 drivers/watchdog/hpwdt.c            |  6 +--
 27 files changed, 218 insertions(+), 72 deletions(-)

----------------------------------------------------------------------

New:  python: convert packages to PEP517/pyproject.toml
[PATCH v2 01/12] python: convert packages to PEP517/pyproject.toml
Author: John Snow <jsnow@redhat.com>

Newer versions of setuptools increasingly expect that packages are
defined using the pyproject.toml/PEP517 packaging layout format. With
3.9 as our minimum, I believe it's finally appropriate to make the shift
away from the legacy packaging format.

Update documentation and dependencies that change as a result of the
different build/packaging/installation pathways.

This change has the effect of fixing "make check-dev", which has been
broken on newer versions of Fedora for a while, now.

Signed-off-by: John Snow <jsnow@redhat.com>
---
 python/README.rst        | 33 ++++++++++++++++-----------------
 python/Makefile          | 18 +++++++++---------
 python/pyproject.toml    | 10 ++++++++++
 python/setup.py          | 40 ----------------------------------------
 python/tests/minreqs.txt |  2 +-
 5 files changed, 36 insertions(+), 67 deletions(-)

----------------------------------------------------------------------

New:  Python: Fix 'make check-dev' and modernize to 3.9+
[PATCH v2 00/12] Python: Fix 'make check-dev' and modernize to 3.9+
Author: John Snow <jsnow@redhat.com>

This series does a couple things that I'll probably end up splitting out=0D
into smaller series if history is any guide, but either way, here it=0D
goes:=0D
=0D
A) Convert qemu.git/python/ to a PEP517/pyproject.toml=0D
package. Ultimately this means deleting setup.py and fully migrating to=0D
newer python infrastructure. I think this should be safe to do by now,=0D
but admittedly I am not *confident* as it relies on setuptools versions=0D
in the wild, not python versions. My motivation for trying it is to fix=0D
"make check-dev", which has been broken for the last two Fedora releases=0D
under newer setuptools which have started removing support for the=0D
pre-PEP517 packaging formats, which will only continue to get worse from=0D
here on out.=0D
=0D
B) Sync changes from the qemu.qmp package back over to qemu.git. I know=0D
I need to decouple this badly, but in order to do so, I need to make=0D
sure they're synchronized to be assured that the switch to the=0D
standalone version won't break anything, so this is a necessary=0D
step. It's happening here because of the 3.6+ compat crud we are still=0D
carrying in qemu.git that has since been removed from the standalone=0D
library.=0D
=0D
C) Move us to 3.9+ style type hints. They are deprecated in 3.9, and=0D
*could* be removed at any time. I figured now was a good time as any to=0D
get rid of them before they become a problem randomly some day in the=0D
future.=0D
=0D
D) Update the mypy configuration to check under multiple Python versions=0D
more effectively and thoroughly.=0D
=0D
Whew.=0D
=0D
v2:=0D
 - Perform the 3.9+ syntax conversion using automated tooling instead=0D
 - Correct illegal escape sequences (pyupgrade whines otherwise)=0D
 - Use the correct shebang for all python scripts in tree=0D
 - Remove asterisk imports from scripts/codeconverter=0D
 - rebased on origin/master=0D
=0D
John Snow (12):=0D
  python: convert packages to PEP517/pyproject.toml=0D
  python: update pylint ignores=0D
  python: sync changes from external qemu.qmp package=0D
  python: update shebangs to standard, using /usr/bin/env=0D
  python: fix illegal escape sequences=0D
  python: upgrade to python3.9+ syntax=0D
  fixup=0D
  python: further 3.9+ syntax upgrades=0D
  python: update mkvenv to type-check under different python versions=0D
  python: remove version restriction for mypy=0D
  scripts/codeconverter: remove unused code=0D
  scripts/codeconverter: remove * imports=0D
=0D
 docs/conf.py                                  |  13 +-=0D
 docs/sphinx/compat.py                         |  12 +-=0D
 docs/sphinx/dbusdoc.py                        |  28 +-=0D
 docs/sphinx/dbusdomain.py                     |  39 +--=0D
 docs/sphinx/dbusparser.py                     |   4 +-=0D
 docs/sphinx/depfile.py                        |  11 +-=0D
 docs/sphinx/fakedbusdoc.py                    |   5 +-=0D
 docs/sphinx/hxtool.py                         |   7 +-=0D
 docs/sphinx/kerneldoc.py                      |   8 +-=0D
 docs/sphinx/qapi_domain.py                    |  81 +++---=0D
 docs/sphinx/qapidoc.py                        |  29 +-=0D
 docs/sphinx/qapidoc_legacy.py                 |   1 -=0D
 docs/sphinx/qmp_lexer.py                      |   7 +-=0D
 python/README.rst                             |  33 ++-=0D
 .gitlab-ci.d/check-dco.py                     |   9 +-=0D
 .gitlab-ci.d/check-patch.py                   |   7 +-=0D
 .gitlab-ci.d/check-units.py                   |   8 +-=0D
 python/Makefile                               |  18 +-=0D
 python/pyproject.toml                         |  10 +=0D
 python/qemu/machine/console_socket.py         |   6 +-=0D
 python/qemu/machine/machine.py                |  34 +--=0D
 python/qemu/machine/qtest.py                  |  13 +-=0D
 python/qemu/qmp/error.py                      |   7 +-=0D
 python/qemu/qmp/events.py                     |  72 +++--=0D
 python/qemu/qmp/legacy.py                     |  31 +-=0D
 python/qemu/qmp/message.py                    |  38 +--=0D
 python/qemu/qmp/models.py                     |  17 +-=0D
 python/qemu/qmp/protocol.py                   | 179 +++++++-----=0D
 python/qemu/qmp/qmp_client.py                 | 147 +++++++---=0D
 python/qemu/qmp/qmp_shell.py                  | 182 ++++++++----=0D
 python/qemu/qmp/qmp_tui.py                    |  55 ++--=0D
 python/qemu/qmp/util.py                       | 116 +-------=0D
 python/qemu/utils/accel.py                    |   6 +-=0D
 python/qemu/utils/qemu_ga_client.py           |  13 +-=0D
 python/qemu/utils/qom_common.py               |  15 +-=0D
 python/qemu/utils/qom_fuse.py                 |  12 +-=0D
 python/scripts/mkvenv.py                      |  40 ++-=0D
 python/setup.cfg                              |   6 +-=0D
 python/setup.py                               |  40 ---=0D
 python/tests/minreqs.txt                      |   2 +-=0D
 python/tests/protocol.py                      |  11 +-=0D
 roms/edk2-build.py                            |  19 +-=0D
 scripts/analyse-9p-simpletrace.py             |   2 +=0D
 scripts/analyse-locks-simpletrace.py          |   5 +-=0D
 scripts/analyze-migration.py                  |  48 ++--=0D
 scripts/block-coroutine-wrapper.py            |   4 +-=0D
 scripts/check_sparse.py                       |   9 +-=0D
 scripts/ci/gitlab-pipeline-status             |   4 +-=0D
 .../codeconverter/codeconverter/patching.py   |  76 ++---=0D
 .../codeconverter/codeconverter/qom_macros.py |  98 +++++--=0D
 .../codeconverter/qom_type_info.py            |  86 ++++--=0D
 .../codeconverter/codeconverter/regexps.py    |   5 +-=0D
 .../codeconverter/test_patching.py            |   6 +-=0D
 .../codeconverter/test_regexps.py             |  33 ++-=0D
 scripts/codeconverter/codeconverter/utils.py  |  10 +-=0D
 scripts/codeconverter/converter.py            |  16 +-=0D
 scripts/compare-machine-types.py              |  49 ++--=0D
 scripts/coverage/compare_gcov_json.py         |   7 +-=0D
 scripts/cpu-x86-uarch-abi.py                  |   6 +-=0D
 scripts/decodetree.py                         |  12 +-=0D
 scripts/device-crash-test                     |  18 +-=0D
 scripts/dump-guest-memory.py                  |   5 +-=0D
 scripts/feature_to_c.py                       |   7 +-=0D
 scripts/kvm/kvm_flightrecorder                |   7 +-=0D
 scripts/kvm/vmxcap                            |   6 +-=0D
 scripts/meson-buildoptions.py                 |   3 +-=0D
 scripts/minikconf.py                          |  13 +-=0D
 scripts/modinfo-collect.py                    |   7 +-=0D
 scripts/modinfo-generate.py                   |   4 +-=0D
 scripts/modules/module_block.py               |   5 +-=0D
 scripts/mtest2make.py                         |   8 +-=0D
 scripts/oss-fuzz/minimize_qtest_trace.py      |  18 +-=0D
 scripts/oss-fuzz/output_reproducer.py         |  18 +-=0D
 .../oss-fuzz/reorder_fuzzer_qtest_trace.py    |   6 +-=0D
 scripts/performance/dissect.py                |   2 +-=0D
 scripts/performance/topN_callgrind.py         |   2 +-=0D
 scripts/performance/topN_perf.py              |   2 +-=0D
 scripts/probe-gdb-support.py                  |   4 +-=0D
 scripts/python_qmp_updater.py                 |   1 +=0D
 scripts/qapi-gen.py                           |   1 +=0D
 scripts/qapi/commands.py                      |  13 +-=0D
 scripts/qapi/common.py                        |  61 ++--=0D
 scripts/qapi/error.py                         |   1 -=0D
 scripts/qapi/events.py                        |   8 +-=0D
 scripts/qapi/expr.py                          |  21 +-=0D
 scripts/qapi/features.py                      |   2 +-=0D
 scripts/qapi/gen.py                           |  14 +-=0D
 scripts/qapi/introspect.py                    |  42 ++-=0D
 scripts/qapi/parser.py                        |  44 ++-=0D
 scripts/qapi/schema.py                        | 271 +++++++++---------=0D
 scripts/qapi/source.py                        |  10 +-=0D
 scripts/qapi/types.py                         |  20 +-=0D
 scripts/qapi/visit.py                         |  14 +-=0D
 scripts/qcow2-to-stdout.py                    |   8 +-=0D
 scripts/qemu-gdb.py                           |  13 +-=0D
 scripts/qemu-plugin-symbols.py                |   4 +-=0D
 scripts/qemu-stamp.py                         |   1 +=0D
 scripts/qemu-trace-stap                       |   1 -=0D
 scripts/qemugdb/aio.py                        |   1 +=0D
 scripts/qemugdb/coroutine.py                  |   1 +=0D
 scripts/qemugdb/mtree.py                      |   1 +=0D
 scripts/qemugdb/tcg.py                        |   2 +-=0D
 scripts/qemugdb/timers.py                     |   2 +-=0D
 scripts/qmp/qemu-ga-client                    |   1 +=0D
 scripts/qmp/qmp                               |   1 +=0D
 scripts/qmp/qmp-shell                         |   1 +=0D
 scripts/qmp/qmp-shell-wrap                    |   1 +=0D
 scripts/qmp/qom-fuse                          |   1 +=0D
 scripts/qmp/qom-get                           |   1 +=0D
 scripts/qmp/qom-list                          |   1 +=0D
 scripts/qmp/qom-set                           |   1 +=0D
 scripts/qmp/qom-tree                          |   1 +=0D
 scripts/qom-cast-macro-clean-cocci-gen.py     |   3 +-=0D
 scripts/render_block_graph.py                 |  28 +-=0D
 scripts/replay-dump.py                        |  10 +-=0D
 scripts/rust/rustc_args.py                    |  10 +-=0D
 scripts/shaderinclude.py                      |   4 +-=0D
 scripts/signrom.py                            |   3 +-=0D
 scripts/simplebench/bench-backup.py           |   9 +-=0D
 scripts/simplebench/bench-example.py          |   4 +-=0D
 scripts/simplebench/bench_block_job.py        |   9 +-=0D
 scripts/simplebench/bench_prealloc.py         |  10 +-=0D
 scripts/simplebench/bench_write_req.py        |   5 +-=0D
 scripts/simplebench/img_bench_templater.py    |  10 +-=0D
 scripts/simplebench/results_to_text.py        |   4 +-=0D
 scripts/simplebench/simplebench.py            |   2 +-=0D
 scripts/simplebench/table_templater.py        |   4 +-=0D
 scripts/simpletrace.py                        |  16 +-=0D
 scripts/symlink-install-tree.py               |   3 +-=0D
 scripts/tracetool.py                          |   5 +-=0D
 scripts/tracetool/__init__.py                 |  11 +-=0D
 scripts/tracetool/backend/__init__.py         |   2 -=0D
 scripts/tracetool/backend/dtrace.py           |   2 -=0D
 scripts/tracetool/backend/ftrace.py           |   2 -=0D
 scripts/tracetool/backend/log.py              |   2 -=0D
 scripts/tracetool/backend/simple.py           |   2 -=0D
 scripts/tracetool/backend/syslog.py           |   2 -=0D
 scripts/tracetool/backend/ust.py              |   2 -=0D
 scripts/tracetool/format/__init__.py          |   2 -=0D
 scripts/tracetool/format/c.py                 |   2 -=0D
 scripts/tracetool/format/d.py                 |   5 +-=0D
 scripts/tracetool/format/h.py                 |   2 -=0D
 scripts/tracetool/format/log_stap.py          |   3 +-=0D
 scripts/tracetool/format/simpletrace_stap.py  |   3 +-=0D
 scripts/tracetool/format/stap.py              |   2 -=0D
 scripts/tracetool/format/ust_events_c.py      |   2 -=0D
 scripts/tracetool/format/ust_events_h.py      |   2 -=0D
 scripts/u2f-setup-gen.py                      |  15 +-=0D
 scripts/undefsym.py                           |   3 +-=0D
 scripts/userfaultfd-wrlat.py                  |  10 +-=0D
 scripts/vmstate-static-checker.py             |   1 +=0D
 scripts/xml-preprocess-test.py                |   3 +-=0D
 scripts/xml-preprocess.py                     |   4 +-=0D
 target/hexagon/gen_analyze_funcs.py           |   3 -=0D
 target/hexagon/gen_decodetree.py              |   9 +-=0D
 target/hexagon/gen_helper_funcs.py            |   3 -=0D
 target/hexagon/gen_helper_protos.py           |   4 +-=0D
 target/hexagon/gen_idef_parser_funcs.py       |   4 -=0D
 target/hexagon/gen_op_attribs.py              |   6 +-=0D
 target/hexagon/gen_opcodes_def.py             |   6 +-=0D
 target/hexagon/gen_printinsn.py               |   5 +-=0D
 target/hexagon/gen_tcg_func_table.py          |   6 +-=0D
 target/hexagon/gen_tcg_funcs.py               |   3 -=0D
 target/hexagon/gen_trans_funcs.py             |   8 +-=0D
 target/hexagon/hex_common.py                  |  15 +-=0D
 tests/docker/docker.py                        |  37 ++-=0D
 tests/functional/aspeed.py                    |   4 +-=0D
 tests/functional/qemu_test/__init__.py        |  30 +-=0D
 tests/functional/qemu_test/archive.py         |   2 +-=0D
 tests/functional/qemu_test/asset.py           |  10 +-=0D
 tests/functional/qemu_test/decorators.py      |   1 +=0D
 tests/functional/qemu_test/linuxkernel.py     |   5 +-=0D
 tests/functional/qemu_test/ports.py           |   3 +-=0D
 tests/functional/qemu_test/testcase.py        |   2 +-=0D
 tests/functional/qemu_test/tuxruntest.py      |  12 +-=0D
 tests/functional/qemu_test/uncompress.py      |   4 +-=0D
 tests/functional/replay_kernel.py             |   7 +-=0D
 tests/functional/reverse_debugging.py         |   5 +-=0D
 .../functional/test_aarch64_aspeed_ast2700.py |   9 +-=0D
 .../test_aarch64_aspeed_ast2700fc.py          |   9 +-=0D
 tests/functional/test_aarch64_imx8mp_evk.py   |   4 +-=0D
 tests/functional/test_aarch64_raspi3.py       |   2 +-=0D
 tests/functional/test_aarch64_raspi4.py       |   7 +-=0D
 tests/functional/test_aarch64_replay.py       |   4 +-=0D
 .../functional/test_aarch64_reverse_debug.py  |   2 +-=0D
 tests/functional/test_aarch64_rme_sbsaref.py  |   8 +-=0D
 tests/functional/test_aarch64_rme_virt.py     |  11 +-=0D
 tests/functional/test_aarch64_sbsaref.py      |   9 +-=0D
 .../functional/test_aarch64_sbsaref_alpine.py |   8 +-=0D
 .../test_aarch64_sbsaref_freebsd.py           |   8 +-=0D
 tests/functional/test_aarch64_smmu.py         |   8 +-=0D
 tests/functional/test_aarch64_tcg_plugins.py  |   4 +-=0D
 tests/functional/test_aarch64_tuxrun.py       |   1 +=0D
 tests/functional/test_aarch64_virt.py         |  11 +-=0D
 tests/functional/test_aarch64_virt_gpu.py     |   7 +-=0D
 tests/functional/test_aarch64_xlnx_versal.py  |   3 +-=0D
 tests/functional/test_acpi_bits.py            |  21 +-=0D
 tests/functional/test_alpha_clipper.py        |   2 +-=0D
 tests/functional/test_arm_aspeed_ast1030.py   |   7 +-=0D
 tests/functional/test_arm_aspeed_ast2500.py   |   2 +-=0D
 tests/functional/test_arm_aspeed_ast2600.py   |  11 +-=0D
 tests/functional/test_arm_aspeed_bletchley.py |   2 +-=0D
 tests/functional/test_arm_aspeed_palmetto.py  |   2 +-=0D
 tests/functional/test_arm_aspeed_rainier.py   |   3 +-=0D
 tests/functional/test_arm_aspeed_romulus.py   |   2 +-=0D
 .../functional/test_arm_aspeed_witherspoon.py |   2 +-=0D
 tests/functional/test_arm_bflt.py             |   8 +-=0D
 tests/functional/test_arm_bpim2u.py           |  10 +-=0D
 tests/functional/test_arm_canona1100.py       |   3 +-=0D
 tests/functional/test_arm_collie.py           |   2 +-=0D
 tests/functional/test_arm_cubieboard.py       |  10 +-=0D
 tests/functional/test_arm_emcraft_sf2.py      |   7 +-=0D
 tests/functional/test_arm_integratorcp.py     |  12 +-=0D
 tests/functional/test_arm_microbit.py         |   8 +-=0D
 tests/functional/test_arm_orangepi.py         |  11 +-=0D
 tests/functional/test_arm_quanta_gsj.py       |   9 +-=0D
 tests/functional/test_arm_raspi2.py           |   7 +-=0D
 tests/functional/test_arm_smdkc210.py         |   2 +-=0D
 tests/functional/test_arm_stellaris.py        |   8 +-=0D
 tests/functional/test_arm_sx1.py              |   2 +-=0D
 tests/functional/test_arm_tuxrun.py           |   1 +=0D
 tests/functional/test_arm_vexpress.py         |   2 +-=0D
 tests/functional/test_arm_virt.py             |   3 +-=0D
 tests/functional/test_avr_mega2560.py         |   2 +-=0D
 tests/functional/test_avr_uno.py              |   2 +-=0D
 tests/functional/test_cpu_queries.py          |   1 +=0D
 tests/functional/test_empty_cpu_model.py      |   1 +=0D
 tests/functional/test_hppa_seabios.py         |   4 +-=0D
 tests/functional/test_i386_tuxrun.py          |   1 +=0D
 tests/functional/test_intel_iommu.py          |   6 +-=0D
 tests/functional/test_linux_initrd.py         |   2 +-=0D
 tests/functional/test_loongarch64_virt.py     |  10 +-=0D
 tests/functional/test_m68k_mcf5208evb.py      |   2 +-=0D
 tests/functional/test_m68k_nextcube.py        |   8 +-=0D
 tests/functional/test_m68k_q800.py            |   3 +-=0D
 tests/functional/test_m68k_tuxrun.py          |   1 +=0D
 tests/functional/test_mem_addr_space.py       |   4 +-=0D
 tests/functional/test_memlock.py              |   9 +-=0D
 .../functional/test_microblaze_s3adsp1800.py  |   9 +-=0D
 tests/functional/test_mips64_malta.py         |   2 +-=0D
 tests/functional/test_mips64_tuxrun.py        |   1 +=0D
 tests/functional/test_mips64el_fuloong2e.py   |  11 +-=0D
 tests/functional/test_mips64el_loongson3v.py  |   8 +-=0D
 tests/functional/test_mips64el_malta.py       |  17 +-=0D
 tests/functional/test_mips64el_tuxrun.py      |   1 +=0D
 tests/functional/test_mips_malta.py           |   8 +-=0D
 tests/functional/test_mips_tuxrun.py          |   1 +=0D
 tests/functional/test_mipsel_malta.py         |  11 +-=0D
 tests/functional/test_mipsel_tuxrun.py        |   1 +=0D
 tests/functional/test_multiprocess.py         |  10 +-=0D
 tests/functional/test_netdev_ethtool.py       |   5 +-=0D
 tests/functional/test_or1k_sim.py             |   2 +-=0D
 tests/functional/test_pc_cpu_hotplug_props.py |   1 +=0D
 tests/functional/test_ppc64_e500.py           |   7 +-=0D
 tests/functional/test_ppc64_hv.py             |  16 +-=0D
 tests/functional/test_ppc64_mac99.py          |   8 +-=0D
 tests/functional/test_ppc64_powernv.py        |   4 +-=0D
 tests/functional/test_ppc64_pseries.py        |   4 +-=0D
 tests/functional/test_ppc64_reverse_debug.py  |   2 +-=0D
 tests/functional/test_ppc64_tuxrun.py         |   3 +-=0D
 tests/functional/test_ppc_40p.py              |  10 +-=0D
 tests/functional/test_ppc_74xx.py             |   4 +-=0D
 tests/functional/test_ppc_amiga.py            |   3 +-=0D
 tests/functional/test_ppc_bamboo.py           |   9 +-=0D
 tests/functional/test_ppc_mac.py              |   2 +-=0D
 tests/functional/test_ppc_mpc8544ds.py        |   3 +-=0D
 tests/functional/test_ppc_sam460ex.py         |   7 +-=0D
 tests/functional/test_ppc_tuxrun.py           |   1 +=0D
 tests/functional/test_ppc_virtex_ml507.py     |   3 +-=0D
 tests/functional/test_riscv32_tuxrun.py       |   1 +=0D
 tests/functional/test_riscv64_tuxrun.py       |   1 +=0D
 tests/functional/test_riscv_opensbi.py        |   4 +-=0D
 tests/functional/test_rx_gdbsim.py            |  10 +-=0D
 tests/functional/test_s390x_ccw_virtio.py     |   9 +-=0D
 tests/functional/test_s390x_topology.py       |  11 +-=0D
 tests/functional/test_s390x_tuxrun.py         |   1 +=0D
 tests/functional/test_sh4_r2d.py              |   2 +-=0D
 tests/functional/test_sh4_tuxrun.py           |   1 +=0D
 tests/functional/test_sh4eb_r2d.py            |   7 +-=0D
 tests/functional/test_sparc64_sun4u.py        |   3 +-=0D
 tests/functional/test_sparc64_tuxrun.py       |   1 +=0D
 tests/functional/test_sparc_sun4m.py          |   2 +-=0D
 tests/functional/test_virtio_balloon.py       |  10 +-=0D
 tests/functional/test_virtio_gpu.py           |  14 +-=0D
 tests/functional/test_virtio_version.py       |   1 +=0D
 tests/functional/test_x86_64_hotplug_blk.py   |   6 +-=0D
 tests/functional/test_x86_64_hotplug_cpu.py   |   6 +-=0D
 tests/functional/test_x86_64_kvm_xen.py       |   8 +-=0D
 tests/functional/test_x86_64_replay.py        |   4 +-=0D
 tests/functional/test_x86_64_reverse_debug.py |   2 +-=0D
 tests/functional/test_x86_64_tuxrun.py        |   1 +=0D
 .../functional/test_x86_cpu_model_versions.py |  13 +-=0D
 tests/functional/test_xtensa_lx60.py          |   2 +-=0D
 tests/guest-debug/run-test.py                 |   9 +-=0D
 tests/guest-debug/test_gdbstub.py             |  15 +-=0D
 tests/image-fuzzer/qcow2/fuzz.py              |   3 +-=0D
 tests/image-fuzzer/qcow2/layout.py            |  32 ++-=0D
 tests/image-fuzzer/runner.py                  |  19 +-=0D
 tests/lcitool/refresh                         |   6 +-=0D
 tests/migration-stress/guestperf-batch.py     |   1 +=0D
 tests/migration-stress/guestperf-plot.py      |   1 +=0D
 tests/migration-stress/guestperf.py           |   1 +=0D
 .../migration-stress/guestperf/comparison.py  |   3 +-=0D
 tests/migration-stress/guestperf/engine.py    |   8 +-=0D
 tests/migration-stress/guestperf/hardware.py  |   2 +-=0D
 tests/migration-stress/guestperf/plot.py      |   4 +-=0D
 tests/migration-stress/guestperf/progress.py  |   4 +-=0D
 tests/migration-stress/guestperf/report.py    |   9 +-=0D
 tests/migration-stress/guestperf/scenario.py  |   2 +-=0D
 tests/migration-stress/guestperf/shell.py     |  18 +-=0D
 tests/migration-stress/guestperf/timings.py   |   4 +-=0D
 tests/qapi-schema/test-qapi.py                |   2 +-=0D
 tests/qemu-iotests/030                        |   6 +-=0D
 tests/qemu-iotests/040                        |   6 +-=0D
 tests/qemu-iotests/041                        |   7 +-=0D
 tests/qemu-iotests/044                        |  11 +-=0D
 tests/qemu-iotests/045                        |  10 +-=0D
 tests/qemu-iotests/055                        |   4 +-=0D
 tests/qemu-iotests/056                        |   6 +-=0D
 tests/qemu-iotests/057                        |   5 +-=0D
 tests/qemu-iotests/065                        |  10 +-=0D
 tests/qemu-iotests/093                        |   9 +-=0D
 tests/qemu-iotests/096                        |   4 +-=0D
 tests/qemu-iotests/118                        |   4 +-=0D
 tests/qemu-iotests/124                        |   8 +-=0D
 tests/qemu-iotests/129                        |   2 +=0D
 tests/qemu-iotests/132                        |   3 +-=0D
 tests/qemu-iotests/136                        |   4 +-=0D
 tests/qemu-iotests/139                        |   3 +-=0D
 tests/qemu-iotests/141                        |   1 +=0D
 tests/qemu-iotests/147                        |  13 +-=0D
 tests/qemu-iotests/148                        |   2 +=0D
 tests/qemu-iotests/149                        |   7 +-=0D
 tests/qemu-iotests/151                        |   6 +-=0D
 tests/qemu-iotests/152                        |   2 +=0D
 tests/qemu-iotests/155                        |   2 +=0D
 tests/qemu-iotests/163                        |  11 +-=0D
 tests/qemu-iotests/165                        |   3 +-=0D
 tests/qemu-iotests/194                        |   7 +-=0D
 tests/qemu-iotests/196                        |   2 +=0D
 tests/qemu-iotests/202                        |   1 +=0D
 tests/qemu-iotests/203                        |   1 +=0D
 tests/qemu-iotests/205                        |  11 +-=0D
 tests/qemu-iotests/206                        |   1 +=0D
 tests/qemu-iotests/207                        |   6 +-=0D
 tests/qemu-iotests/208                        |   1 +=0D
 tests/qemu-iotests/209                        |  11 +-=0D
 tests/qemu-iotests/210                        |   1 +=0D
 tests/qemu-iotests/211                        |   1 +=0D
 tests/qemu-iotests/212                        |   1 +=0D
 tests/qemu-iotests/213                        |   1 +=0D
 tests/qemu-iotests/216                        |   1 +=0D
 tests/qemu-iotests/218                        |   1 +=0D
 tests/qemu-iotests/219                        |   1 +=0D
 tests/qemu-iotests/224                        |  13 +-=0D
 tests/qemu-iotests/228                        |  11 +-=0D
 tests/qemu-iotests/234                        |   4 +-=0D
 tests/qemu-iotests/235                        |  14 +-=0D
 tests/qemu-iotests/236                        |   1 +=0D
 tests/qemu-iotests/237                        |   2 +=0D
 tests/qemu-iotests/238                        |   3 +-=0D
 tests/qemu-iotests/240                        |   2 +-=0D
 tests/qemu-iotests/242                        |  23 +-=0D
 tests/qemu-iotests/245                        |   1 +=0D
 tests/qemu-iotests/246                        |   1 +=0D
 tests/qemu-iotests/248                        |  12 +-=0D
 tests/qemu-iotests/254                        |   3 +-=0D
 tests/qemu-iotests/255                        |   1 +=0D
 tests/qemu-iotests/256                        |   4 +-=0D
 tests/qemu-iotests/257                        |  28 +-=0D
 tests/qemu-iotests/258                        |  10 +-=0D
 tests/qemu-iotests/260                        |   8 +-=0D
 tests/qemu-iotests/262                        |   4 +-=0D
 tests/qemu-iotests/264                        |   7 +-=0D
 tests/qemu-iotests/274                        |   1 +=0D
 tests/qemu-iotests/277                        |  10 +-=0D
 tests/qemu-iotests/280                        |   2 +-=0D
 tests/qemu-iotests/281                        |   4 +-=0D
 tests/qemu-iotests/283                        |   1 +=0D
 tests/qemu-iotests/295                        |   6 +-=0D
 tests/qemu-iotests/296                        |   7 +-=0D
 tests/qemu-iotests/297                        |   8 +-=0D
 tests/qemu-iotests/298                        |   2 +=0D
 tests/qemu-iotests/299                        |   1 +=0D
 tests/qemu-iotests/300                        |  10 +-=0D
 tests/qemu-iotests/302                        |   4 +-=0D
 tests/qemu-iotests/303                        |  13 +-=0D
 tests/qemu-iotests/304                        |   3 +-=0D
 tests/qemu-iotests/307                        |   2 +-=0D
 tests/qemu-iotests/310                        |   1 +=0D
 tests/qemu-iotests/check                      |   7 +-=0D
 tests/qemu-iotests/fat16.py                   |  12 +-=0D
 tests/qemu-iotests/findtests.py               |  19 +-=0D
 tests/qemu-iotests/iotests.py                 |  70 +++--=0D
 tests/qemu-iotests/linters.py                 |   9 +-=0D
 tests/qemu-iotests/nbd-fault-injector.py      |  13 +-=0D
 tests/qemu-iotests/qcow2.py                   |   5 +-=0D
 tests/qemu-iotests/qcow2_format.py            |  14 +-=0D
 tests/qemu-iotests/qed.py                     |  10 +-=0D
 tests/qemu-iotests/testenv.py                 |  25 +-=0D
 tests/qemu-iotests/testrunner.py              |  32 +--=0D
 tests/qemu-iotests/tests/block-status-cache   |   1 +=0D
 .../tests/export-incoming-iothread            |   1 +=0D
 .../qemu-iotests/tests/graph-changes-while-io |  11 +-=0D
 tests/qemu-iotests/tests/image-fleecing       |   1 +=0D
 tests/qemu-iotests/tests/inactive-node-nbd    |   8 +-=0D
 .../tests/iothreads-commit-active             |   2 +=0D
 tests/qemu-iotests/tests/iothreads-create     |   2 +=0D
 tests/qemu-iotests/tests/iothreads-nbd-export |   3 +=0D
 tests/qemu-iotests/tests/iothreads-stream     |   2 +=0D
 tests/qemu-iotests/tests/luks-detached-header |   5 +-=0D
 .../tests/migrate-bitmaps-postcopy-test       |  10 +-=0D
 tests/qemu-iotests/tests/migrate-bitmaps-test |   2 +-=0D
 .../qemu-iotests/tests/migrate-during-backup  |   1 +=0D
 .../tests/mirror-change-copy-mode             |   3 +-=0D
 .../tests/mirror-ready-cancel-error           |   1 +=0D
 tests/qemu-iotests/tests/nbd-multiconn        |   2 +-=0D
 .../qemu-iotests/tests/nbd-reconnect-on-open  |  11 +-=0D
 .../qemu-iotests/tests/parallels-read-bitmap  |   8 +-=0D
 tests/qemu-iotests/tests/qsd-migrate          |   2 +-=0D
 .../tests/remove-bitmap-from-backing          |   8 +-=0D
 tests/qemu-iotests/tests/reopen-file          |   3 +-=0D
 .../qemu-iotests/tests/stream-error-on-reset  |   8 +-=0D
 .../tests/stream-unaligned-prefetch           |  13 +-=0D
 .../qemu-iotests/tests/stream-under-throttle  |   4 +-=0D
 tests/qemu-iotests/tests/vvfat                |   7 +-=0D
 tests/tcg/aarch64/gdbstub/test-mte.py         |   2 +-=0D
 tests/tcg/aarch64/gdbstub/test-sve-ioctl.py   |   4 +-=0D
 tests/tcg/aarch64/gdbstub/test-sve.py         |   2 +-=0D
 tests/tcg/i386/test-avx.py                    |  11 +-=0D
 tests/tcg/i386/test-mmx.py                    |   9 +-=0D
 tests/tcg/multiarch/gdbstub/catch-syscalls.py |   6 +-=0D
 .../gdbstub/follow-fork-mode-child.py         |   4 +-=0D
 .../gdbstub/follow-fork-mode-parent.py        |   2 +-=0D
 tests/tcg/multiarch/gdbstub/interrupt.py      |   1 -=0D
 tests/tcg/multiarch/gdbstub/late-attach.py    |   4 +-=0D
 tests/tcg/multiarch/gdbstub/memory.py         |   2 -=0D
 tests/tcg/multiarch/gdbstub/prot-none.py      |   5 +-=0D
 tests/tcg/multiarch/gdbstub/registers.py      |   3 +-=0D
 tests/tcg/multiarch/gdbstub/sha1.py           |   1 -=0D
 .../multiarch/gdbstub/test-proc-mappings.py   |   1 -=0D
 .../multiarch/gdbstub/test-qxfer-auxv-read.py |   1 -=0D
 .../gdbstub/test-qxfer-siginfo-read.py        |   2 +-=0D
 .../gdbstub/test-thread-breakpoint.py         |   1 -=0D
 .../system/validate-memory-counts.py          |   7 +-=0D
 tests/tcg/s390x/gdbstub/test-signals-s390x.py |   2 -=0D
 tests/tcg/s390x/gdbstub/test-svc.py           |   1 -=0D
 tests/vm/aarch64vm.py                         |  16 +-=0D
 tests/vm/basevm.py                            |  37 +--=0D
 tests/vm/centos.aarch64                       |  11 +-=0D
 tests/vm/freebsd                              |   7 +-=0D
 tests/vm/haiku.x86_64                         |   7 +-=0D
 tests/vm/netbsd                               |   5 +-=0D
 tests/vm/openbsd                              |   5 +-=0D
 tests/vm/ubuntu.aarch64                       |   6 +-=0D
 tests/vm/ubuntuvm.py                          |   6 +-=0D
 456 files changed, 2624 insertions(+), 2058 deletions(-)=0D

----------------------------------------------------------------------

New:  riscv: Allow SBI_CONSOLE with no uart in device tree
[kvm-unit-tests PATCH 1/2] riscv: Allow SBI_CONSOLE with no uart in device tree
Author: Jesse Taube <jesse@rivosinc.com>

When CONFIG_SBI_CONSOLE is enabled and there is no uart defined in the
device tree kvm-unit-tests fails to start.

Only check if uart exists in device tree if SBI_CONSOLE is false.

Signed-off-by: Jesse Taube <jesse@rivosinc.com>
---
 lib/riscv/io.c | 2 ++
 1 file changed, 2 insertions(+)

----------------------------------------------------------------------

New:  tests/acpi: virt: add an empty HEST file
[PATCH v10 (RESEND) 01/20] tests/acpi: virt: add an empty HEST file
Author: Mauro Carvalho Chehab <mchehab+huawei@kernel.org>

Such file will be used to track HEST table changes.

For now, disallow HEST table check until we update it to the
current data.

Signed-off-by: Mauro Carvalho Chehab <mchehab+huawei@kernel.org>
Acked-by: Igor Mammedov <imammedo@redhat.com>
Reviewed-by: Jonathan Cameron <Jonathan.Cameron@huawei.com>
---
 tests/data/acpi/aarch64/virt/HEST           | 0
 tests/qtest/bios-tables-test-allowed-diff.h | 1 +
 2 files changed, 1 insertion(+)

----------------------------------------------------------------------

New:  Change ghes to use HEST-based offsets and add support for error inject
[PATCH v10 (RESEND) 00/20] Change ghes to use HEST-based offsets and add support for error inject
Author: Mauro Carvalho Chehab <mchehab+huawei@kernel.org>

Hi Michael,

This is v10 of the patch series, rebased to apply after release
10.0. The only difference against v9 is a minor confict resolution.

I sent already the patch with conflicts, but, as you didn't pick,
I'm assuming you're opting to see the entire series again, as it
could make easier for you to use b4 or some other script you may
use to pick patches. So, let me resend the entire series.

It is nearly identical to v9 which addressed 3 issues:

- backward compatibility logic moved to version 10.0;
- fixed a compilation issue with target/arm/kvm.c (probably
  caused by some rebase - funny enough, incremental 
  compilation was fine here);
- added two missing SPDX comments.

As ghes_record_cper_errors() was written since the beginning
to be public and used by ghes-cper.c. It ended being meged
earlier because the error-injection series become too big,
so it was decided last year to split in two to make easier for
reviewers and maintainers to discuss.

This series change the way HEST table offsets are calculated,
making them identical to what an OSPM would do and allowing
multiple HEST entries without causing migration issues. It open
space to add HEST support for non-arm architectures, as now
the number and type of HEST notification entries are not
hardcoded at ghes.c. Instead, they're passed as a parameter
from the arch-dependent init code.

With such issue addressed, it adds a new notification type and
add support to inject errors via a Python script. The script
itself is at the final patch.

---

v10:
- rebased on the top of current upstream:
  d9ce74873a6a ("Merge tag 'pull-vfio-20250611' of https://github.com/legoater/qemu into staging")
- solved a minor conflict

v9:
- backward compatibility logic moved to version 10.0;
- fixed a compilation issue with target/arm/kvm.c (probably
  caused by some rebase - funny enough, incremental 
  compilation was fine here);
- added two missing SPDX comments.

v8:
  - added a patch to revert recently-added changeset causing a
    conflict with these. All remaining patches are identical.

v7:
  - minor editorial change at the patch updating HEST doc spec
   with the new workflow

v6:
- some minor nits addressed:
   - use GPA instead of offset;
   - merged two patches;
   - fixed a couple of long line coding style issues;
   - the HEST/DSDT diff inside a patch was changed to avoid troubles
     applying it.

v5:
- make checkpatch happier;
- HEST table is now tested;
- some changes at HEST spec documentation to align with code changes;
- extra care was taken with regards to git bisectability.

v4:
- added an extra comment for AcpiGhesState structure;
- patches reordered;
- no functional changes, just code shift between the patches in this series.

v3:
- addressed more nits;
- hest_add_le now points to the beginning of HEST table;
- removed HEST from tests/data/acpi;
- added an extra patch to not use fw_cfg with virt-10.0 for hw_error_le

v2:
- address some nits;
- improved ags cleanup patch and removed ags.present field;
- added some missing le*_to_cpu() calls;
- update date at copyright for new files to 2024-2025;
- qmp command changed to: inject-ghes-v2-error ans since updated to 10.0;
- added HEST and DSDT tables after the changes to make check target happy.
  (two patches: first one whitelisting such tables; second one removing from
   whitelist and updating/adding such tables to tests/data/acpi)

Mauro Carvalho Chehab (20):
  tests/acpi: virt: add an empty HEST file
  tests/qtest/bios-tables-test: extend to also check HEST table
  tests/acpi: virt: update HEST file with its current data
  Revert "hw/acpi/ghes: Make ghes_record_cper_errors() static"
  acpi/ghes: Cleanup the code which gets ghes ged state
  acpi/ghes: prepare to change the way HEST offsets are calculated
  acpi/ghes: add a firmware file with HEST address
  acpi/ghes: Use HEST table offsets when preparing GHES records
  acpi/ghes: don't hard-code the number of sources for HEST table
  acpi/ghes: add a notifier to notify when error data is ready
  acpi/generic_event_device: Update GHES migration to cover hest addr
  acpi/generic_event_device: add logic to detect if HEST addr is
    available
  acpi/generic_event_device: add an APEI error device
  tests/acpi: virt: allow acpi table changes at DSDT and HEST tables
  arm/virt: Wire up a GED error device for ACPI / GHES
  qapi/acpi-hest: add an interface to do generic CPER error injection
  acpi/generic_event_device.c: enable use_hest_addr for QEMU 10.x
  tests/acpi: virt: update HEST and DSDT tables
  docs: hest: add new "etc/acpi_table_hest_addr" and update workflow
  scripts/ghes_inject: add a script to generate GHES error inject

 MAINTAINERS                                   |  10 +
 docs/specs/acpi_hest_ghes.rst                 |  28 +-
 hw/acpi/Kconfig                               |   5 +
 hw/acpi/aml-build.c                           |  10 +
 hw/acpi/generic_event_device.c                |  44 ++
 hw/acpi/ghes-stub.c                           |   7 +-
 hw/acpi/ghes.c                                | 233 ++++--
 hw/acpi/ghes_cper.c                           |  39 +
 hw/acpi/ghes_cper_stub.c                      |  20 +
 hw/acpi/meson.build                           |   2 +
 hw/arm/virt-acpi-build.c                      |  35 +-
 hw/arm/virt.c                                 |  19 +-
 hw/core/machine.c                             |   2 +
 include/hw/acpi/acpi_dev_interface.h          |   1 +
 include/hw/acpi/aml-build.h                   |   2 +
 include/hw/acpi/generic_event_device.h        |   1 +
 include/hw/acpi/ghes.h                        |  51 +-
 include/hw/arm/virt.h                         |   2 +
 qapi/acpi-hest.json                           |  35 +
 qapi/meson.build                              |   1 +
 qapi/qapi-schema.json                         |   1 +
 scripts/arm_processor_error.py                | 476 ++++++++++++
 scripts/ghes_inject.py                        |  51 ++
 scripts/qmp_helper.py                         | 703 ++++++++++++++++++
 target/arm/kvm.c                              |   7 +-
 tests/data/acpi/aarch64/virt/DSDT             | Bin 5196 -> 5240 bytes
 .../data/acpi/aarch64/virt/DSDT.acpihmatvirt  | Bin 5282 -> 5326 bytes
 tests/data/acpi/aarch64/virt/DSDT.memhp       | Bin 6557 -> 6601 bytes
 tests/data/acpi/aarch64/virt/DSDT.pxb         | Bin 7679 -> 7723 bytes
 tests/data/acpi/aarch64/virt/DSDT.topology    | Bin 5398 -> 5442 bytes
 tests/data/acpi/aarch64/virt/HEST             | Bin 0 -> 224 bytes
 tests/qtest/bios-tables-test.c                |   2 +-
 32 files changed, 1697 insertions(+), 90 deletions(-)

----------------------------------------------------------------------

New:  x86: Fix build warnings about export.h
[PATCH] x86: Fix build warnings about export.h
Author: Zhenghan Cheng <chengzhenghan@uniontech.com>

After commit a934a57a42f64a4 ("scripts/misc-check:
check missing #include <linux/export.h> when W=1")
and commit 7d95680d64ac8e836c ("scripts/misc-check:
check unnecessary #include <linux/export.h> when W=1"),
we get some build warnings with W=1,such as:

arch/x86/coco/sev/core.c: warning: EXPORT_SYMBOL() is used, but #include <linux/export.h> is missing
arch/x86/crypto/aria_aesni_avx2_glue.c: warning: EXPORT_SYMBOL() is used, but #include <linux/export.h> is missing
arch/x86/kernel/unwind_orc.c: warning: EXPORT_SYMBOL() is used, but #include <linux/export.h> is missing
arch/x86/kvm/hyperv.c: warning: EXPORT_SYMBOL() is used, but #include <linux/export.h> is missing
arch/x86/events/intel/core.c: warning: EXPORT_SYMBOL() is not used, but #include <linux/export.h> is present
arch/x86/events/zhaoxin/core.c: warning: EXPORT_SYMBOL() is not used, but #include <linux/export.h> is present
arch/x86/kernel/crash.c: warning: EXPORT_SYMBOL() is not used, but #include <linux/export.h> is present
arch/x86/kernel/devicetree.c: warning: EXPORT_SYMBOL() is not used, but #include <linux/export.h> is present

so fix these build warnings for x86.

Signed-off-by: "Zhenghan Cheng" <chengzhenghan@uniontech.com>
Suggested-by: "Huacai Chen" <chenhuacai@loongson.cn>

diff --git a/arch/x86/coco/sev/core.c b/arch/x86/coco/sev/core.c
index b6db4e0b936b..773b24859037 100644
--- a/arch/x86/coco/sev/core.c
+++ b/arch/x86/coco/sev/core.c
@@ -24,6 +24,7 @@
 #include <linux/io.h>
 #include <linux/psp-sev.h>
 #include <linux/dmi.h>
+#include <linux/export.h>
 #include <uapi/linux/sev-guest.h>
 #include <crypto/gcm.h>

diff --git a/arch/x86/crypto/aria_aesni_avx2_glue.c b/arch/x86/crypto/aria_aesni_avx2_glue.c
index b4bddcd58457..007b250f774c 100644
--- a/arch/x86/crypto/aria_aesni_avx2_glue.c
+++ b/arch/x86/crypto/aria_aesni_avx2_glue.c
@@ -9,6 +9,7 @@
 #include <crypto/aria.h>
 #include <linux/crypto.h>
 #include <linux/err.h>
+#include <linux/export.h>
 #include <linux/module.h>
 #include <linux/types.h>

diff --git a/arch/x86/crypto/aria_aesni_avx_glue.c b/arch/x86/crypto/aria_aesni_avx_glue.c
index ab9b38d05332..4c88ef4eba82 100644
--- a/arch/x86/crypto/aria_aesni_avx_glue.c
+++ b/arch/x86/crypto/aria_aesni_avx_glue.c
@@ -9,6 +9,7 @@
 #include <crypto/aria.h>
 #include <linux/crypto.h>
 #include <linux/err.h>
+#include <linux/export.h>
 #include <linux/module.h>
 #include <linux/types.h>

diff --git a/arch/x86/crypto/camellia_aesni_avx_glue.c b/arch/x86/crypto/camellia_aesni_avx_glue.c
index a7d162388142..5c321f255eb7 100644
--- a/arch/x86/crypto/camellia_aesni_avx_glue.c
+++ b/arch/x86/crypto/camellia_aesni_avx_glue.c
@@ -8,6 +8,7 @@
 #include <crypto/algapi.h>
 #include <linux/crypto.h>
 #include <linux/err.h>
+#include <linux/export.h>
 #include <linux/module.h>
 #include <linux/types.h>

diff --git a/arch/x86/crypto/camellia_glue.c b/arch/x86/crypto/camellia_glue.c
index 3bd37d664121..cbede120e5f2 100644
--- a/arch/x86/crypto/camellia_glue.c
+++ b/arch/x86/crypto/camellia_glue.c
@@ -10,6 +10,7 @@

 #include <linux/unaligned.h>
 #include <linux/crypto.h>
+#include <linux/export.h>
 #include <linux/init.h>
 #include <linux/module.h>
 #include <linux/types.h>
diff --git a/arch/x86/crypto/curve25519-x86_64.c b/arch/x86/crypto/curve25519-x86_64.c
index dcfc0de333de..86d4c4d85487 100644
--- a/arch/x86/crypto/curve25519-x86_64.c
+++ b/arch/x86/crypto/curve25519-x86_64.c
@@ -8,6 +8,7 @@
 #include <crypto/internal/kpp.h>

 #include <linux/types.h>
+#include <linux/export.h>
 #include <linux/jump_label.h>
 #include <linux/kernel.h>
 #include <linux/module.h>
diff --git a/arch/x86/crypto/serpent_avx_glue.c b/arch/x86/crypto/serpent_avx_glue.c
index e640abc1cb8a..9c8b3a335d5c 100644
--- a/arch/x86/crypto/serpent_avx_glue.c
+++ b/arch/x86/crypto/serpent_avx_glue.c
@@ -12,6 +12,7 @@
 #include <linux/types.h>
 #include <linux/crypto.h>
 #include <linux/err.h>
+#include <linux/export.h>
 #include <crypto/algapi.h>
 #include <crypto/serpent.h>

diff --git a/arch/x86/crypto/sm4_aesni_avx_glue.c b/arch/x86/crypto/sm4_aesni_avx_glue.c
index 72867fc49ce8..88caf418a06f 100644
--- a/arch/x86/crypto/sm4_aesni_avx_glue.c
+++ b/arch/x86/crypto/sm4_aesni_avx_glue.c
@@ -11,6 +11,7 @@
 #include <asm/fpu/api.h>
 #include <linux/module.h>
 #include <linux/crypto.h>
+#include <linux/export.h>
 #include <linux/kernel.h>
 #include <crypto/internal/skcipher.h>
 #include <crypto/sm4.h>
diff --git a/arch/x86/crypto/twofish_glue.c b/arch/x86/crypto/twofish_glue.c
index 4c67184dc573..8e9906d36902 100644
--- a/arch/x86/crypto/twofish_glue.c
+++ b/arch/x86/crypto/twofish_glue.c
@@ -40,6 +40,7 @@

 #include <crypto/algapi.h>
 #include <crypto/twofish.h>
+#include <linux/export.h>
 #include <linux/init.h>
 #include <linux/module.h>
 #include <linux/types.h>
diff --git a/arch/x86/crypto/twofish_glue_3way.c b/arch/x86/crypto/twofish_glue_3way.c
index 1a1ecfa7f72a..8ad77725bf60 100644
--- a/arch/x86/crypto/twofish_glue_3way.c
+++ b/arch/x86/crypto/twofish_glue_3way.c
@@ -9,6 +9,7 @@
 #include <crypto/algapi.h>
 #include <crypto/twofish.h>
 #include <linux/crypto.h>
+#include <linux/export.h>
 #include <linux/init.h>
 #include <linux/module.h>
 #include <linux/types.h>
diff --git a/arch/x86/events/intel/core.c b/arch/x86/events/intel/core.c
index 741b229f0718..04cf3d1019d9 100644
--- a/arch/x86/events/intel/core.c
+++ b/arch/x86/events/intel/core.c
@@ -12,7 +12,6 @@
 #include <linux/types.h>
 #include <linux/init.h>
 #include <linux/slab.h>
-#include <linux/export.h>
 #include <linux/nmi.h>
 #include <linux/kvm_host.h>

diff --git a/arch/x86/events/intel/lbr.c b/arch/x86/events/intel/lbr.c
index 7aa59966e7c3..10619c767602 100644
--- a/arch/x86/events/intel/lbr.c
+++ b/arch/x86/events/intel/lbr.c
@@ -1,5 +1,6 @@
 // SPDX-License-Identifier: GPL-2.0
 #include <linux/perf_event.h>
+#include <linux/export.h>
 #include <linux/types.h>

 #include <asm/cpu_device_id.h>
diff --git a/arch/x86/events/intel/pt.c b/arch/x86/events/intel/pt.c
index e8cf29d2b10c..9c772c89b623 100644
--- a/arch/x86/events/intel/pt.c
+++ b/arch/x86/events/intel/pt.c
@@ -17,6 +17,8 @@
 #include <linux/limits.h>
 #include <linux/slab.h>
 #include <linux/device.h>
+#include <linux/export.h>
+

 #include <asm/cpuid/api.h>
 #include <asm/perf_event.h>
diff --git a/arch/x86/events/zhaoxin/core.c b/arch/x86/events/zhaoxin/core.c
index 4bdfcf091200..67fa000cf372 100644
--- a/arch/x86/events/zhaoxin/core.c
+++ b/arch/x86/events/zhaoxin/core.c
@@ -9,7 +9,6 @@
 #include <linux/types.h>
 #include <linux/init.h>
 #include <linux/slab.h>
-#include <linux/export.h>
 #include <linux/nmi.h>

 #include <asm/cpufeature.h>
diff --git a/arch/x86/hyperv/hv_init.c b/arch/x86/hyperv/hv_init.c
index 3d1d3547095a..3bd18521cd46 100644
--- a/arch/x86/hyperv/hv_init.c
+++ b/arch/x86/hyperv/hv_init.c
@@ -29,6 +29,7 @@
 #include <linux/vmalloc.h>
 #include <linux/mm.h>
 #include <linux/slab.h>
+#include <linux/export.h>
 #include <linux/kernel.h>
 #include <linux/cpuhotplug.h>
 #include <linux/syscore_ops.h>
diff --git a/arch/x86/hyperv/irqdomain.c b/arch/x86/hyperv/irqdomain.c
index 31f0d29cbc5e..f7627bc8fe49 100644
--- a/arch/x86/hyperv/irqdomain.c
+++ b/arch/x86/hyperv/irqdomain.c
@@ -10,6 +10,7 @@

 #include <linux/pci.h>
 #include <linux/irq.h>
+#include <linux/export.h>
 #include <asm/mshyperv.h>

 static int hv_map_interrupt(union hv_device_id device_id, bool level,
diff --git a/arch/x86/hyperv/ivm.c b/arch/x86/hyperv/ivm.c
index e93a2f488ff7..d9c0b3064222 100644
--- a/arch/x86/hyperv/ivm.c
+++ b/arch/x86/hyperv/ivm.c
@@ -7,6 +7,7 @@
  */

 #include <linux/bitfield.h>
+#include <linux/export.h>
 #include <linux/types.h>
 #include <linux/slab.h>
 #include <linux/cpu.h>
diff --git a/arch/x86/hyperv/nested.c b/arch/x86/hyperv/nested.c
index 1083dc8646f9..1413bfe40ea9 100644
--- a/arch/x86/hyperv/nested.c
+++ b/arch/x86/hyperv/nested.c
@@ -9,7 +9,7 @@
  */
 #define pr_fmt(fmt)  "Hyper-V: " fmt

-
+#include <linux/export.h>
 #include <linux/types.h>
 #include <hyperv/hvhdk.h>
 #include <asm/mshyperv.h>
diff --git a/arch/x86/kernel/acpi/cppc.c b/arch/x86/kernel/acpi/cppc.c
index 7047124490f6..e943947ccb3d 100644
--- a/arch/x86/kernel/acpi/cppc.c
+++ b/arch/x86/kernel/acpi/cppc.c
@@ -5,6 +5,7 @@
  */

 #include <linux/bitfield.h>
+#include <linux/export.h>

 #include <acpi/cppc_acpi.h>
 #include <asm/msr.h>
diff --git a/arch/x86/kernel/alternative.c b/arch/x86/kernel/alternative.c
index ecfe7b497cad..882d99b1f4fb 100644
--- a/arch/x86/kernel/alternative.c
+++ b/arch/x86/kernel/alternative.c
@@ -6,6 +6,7 @@
 #include <linux/vmalloc.h>
 #include <linux/memory.h>
 #include <linux/execmem.h>
+#include <linux/export.h>

 #include <asm/text-patching.h>
 #include <asm/insn.h>
diff --git a/arch/x86/kernel/amd_node.c b/arch/x86/kernel/amd_node.c
index a40176b62eb5..55118dd87116 100644
--- a/arch/x86/kernel/amd_node.c
+++ b/arch/x86/kernel/amd_node.c
@@ -9,6 +9,7 @@
  */

 #include <linux/debugfs.h>
+#include <linux/export.h>
 #include <asm/amd/node.h>

 /*
diff --git a/arch/x86/kernel/apic/apic_common.c b/arch/x86/kernel/apic/apic_common.c
index 9ef3be866832..f7e1cbb70029 100644
--- a/arch/x86/kernel/apic/apic_common.c
+++ b/arch/x86/kernel/apic/apic_common.c
@@ -3,6 +3,7 @@
  *
  * SPDX-License-Identifier: GPL-2.0
  */
+#include <linux/export.h>
 #include <linux/irq.h>
 #include <asm/apic.h>

diff --git a/arch/x86/kernel/apic/msi.c b/arch/x86/kernel/apic/msi.c
index 66bc5d3e79db..3f133e24a38e 100644
--- a/arch/x86/kernel/apic/msi.c
+++ b/arch/x86/kernel/apic/msi.c
@@ -14,6 +14,7 @@
 #include <linux/dmar.h>
 #include <linux/hpet.h>
 #include <linux/msi.h>
+#include <linux/export.h>
 #include <asm/irqdomain.h>
 #include <asm/hpet.h>
 #include <asm/hw_irq.h>
diff --git a/arch/x86/kernel/apic/vector.c b/arch/x86/kernel/apic/vector.c
index 93069b13d3af..f35c9184ac30 100644
--- a/arch/x86/kernel/apic/vector.c
+++ b/arch/x86/kernel/apic/vector.c
@@ -13,6 +13,7 @@
 #include <linux/init.h>
 #include <linux/compiler.h>
 #include <linux/slab.h>
+#include <linux/export.h>
 #include <asm/irqdomain.h>
 #include <asm/hw_irq.h>
 #include <asm/traps.h>
diff --git a/arch/x86/kernel/cpu/acrn.c b/arch/x86/kernel/cpu/acrn.c
index 2c5b51aad91a..8f181da43b20 100644
--- a/arch/x86/kernel/cpu/acrn.c
+++ b/arch/x86/kernel/cpu/acrn.c
@@ -10,6 +10,7 @@
  */

 #include <linux/interrupt.h>
+#include <linux/export.h>

 #include <asm/acrn.h>
 #include <asm/apic.h>
diff --git a/arch/x86/kernel/cpu/aperfmperf.c b/arch/x86/kernel/cpu/aperfmperf.c
index a315b0627dfb..e441400106f8 100644
--- a/arch/x86/kernel/cpu/aperfmperf.c
+++ b/arch/x86/kernel/cpu/aperfmperf.c
@@ -8,6 +8,7 @@
  */
 #include <linux/cpufreq.h>
 #include <linux/delay.h>
+#include <linux/export.h>
 #include <linux/ktime.h>
 #include <linux/math64.h>
 #include <linux/percpu.h>
diff --git a/arch/x86/kernel/cpu/bugs.c b/arch/x86/kernel/cpu/bugs.c
index 7f94e6a5497d..fd136016ff8f 100644
--- a/arch/x86/kernel/cpu/bugs.c
+++ b/arch/x86/kernel/cpu/bugs.c
@@ -16,6 +16,7 @@
 #include <linux/sched/smt.h>
 #include <linux/pgtable.h>
 #include <linux/bpf.h>
+#include <linux/export.h>

 #include <asm/spec-ctrl.h>
 #include <asm/cmdline.h>
diff --git a/arch/x86/kernel/cpu/bus_lock.c b/arch/x86/kernel/cpu/bus_lock.c
index 981f8b1f0792..68105db4dc66 100644
--- a/arch/x86/kernel/cpu/bus_lock.c
+++ b/arch/x86/kernel/cpu/bus_lock.c
@@ -6,6 +6,7 @@
 #include <linux/workqueue.h>
 #include <linux/delay.h>
 #include <linux/cpuhotplug.h>
+#include <linux/export.h>
 #include <asm/cpu_device_id.h>
 #include <asm/cmdline.h>
 #include <asm/traps.h>
diff --git a/arch/x86/kernel/cpu/mce/amd.c b/arch/x86/kernel/cpu/mce/amd.c
index 9d852c3b2cb5..9b335a939576 100644
--- a/arch/x86/kernel/cpu/mce/amd.c
+++ b/arch/x86/kernel/cpu/mce/amd.c
@@ -8,6 +8,7 @@
 #include <linux/interrupt.h>
 #include <linux/notifier.h>
 #include <linux/kobject.h>
+#include <linux/export.h>
 #include <linux/percpu.h>
 #include <linux/errno.h>
 #include <linux/sched.h>
diff --git a/arch/x86/kernel/cpu/mce/dev-mcelog.c b/arch/x86/kernel/cpu/mce/dev-mcelog.c
index 8d023239ce18..4657fdb4810e 100644
--- a/arch/x86/kernel/cpu/mce/dev-mcelog.c
+++ b/arch/x86/kernel/cpu/mce/dev-mcelog.c
@@ -10,6 +10,7 @@
  */

 #include <linux/miscdevice.h>
+#include <linux/export.h>
 #include <linux/slab.h>
 #include <linux/kmod.h>
 #include <linux/poll.h>
diff --git a/arch/x86/kernel/cpu/microcode/intel.c b/arch/x86/kernel/cpu/microcode/intel.c
index 371ca6eac00e..50b17579ca97 100644
--- a/arch/x86/kernel/cpu/microcode/intel.c
+++ b/arch/x86/kernel/cpu/microcode/intel.c
@@ -14,6 +14,7 @@
 #include <linux/earlycpio.h>
 #include <linux/firmware.h>
 #include <linux/uaccess.h>
+#include <linux/export.h>
 #include <linux/initrd.h>
 #include <linux/kernel.h>
 #include <linux/slab.h>
diff --git a/arch/x86/kernel/cpu/sgx/main.c b/arch/x86/kernel/cpu/sgx/main.c
index 2de01b379aa3..cb9eade755ee 100644
--- a/arch/x86/kernel/cpu/sgx/main.c
+++ b/arch/x86/kernel/cpu/sgx/main.c
@@ -1,6 +1,7 @@
 // SPDX-License-Identifier: GPL-2.0
 /*  Copyright(c) 2016-20 Intel Corporation. */

+#include <linux/export.h>
 #include <linux/file.h>
 #include <linux/freezer.h>
 #include <linux/highmem.h>
diff --git a/arch/x86/kernel/cpu/sgx/virt.c b/arch/x86/kernel/cpu/sgx/virt.c
index 7aaa3652e31d..15ce2a05c260 100644
--- a/arch/x86/kernel/cpu/sgx/virt.c
+++ b/arch/x86/kernel/cpu/sgx/virt.c
@@ -5,6 +5,7 @@
  * Copyright(c) 2021 Intel Corporation.
  */

+#include <linux/export.h>
 #include <linux/miscdevice.h>
 #include <linux/mm.h>
 #include <linux/mman.h>
diff --git a/arch/x86/kernel/cpu/topology.c b/arch/x86/kernel/cpu/topology.c
index e35ccdc84910..30df9f9c4b0d 100644
--- a/arch/x86/kernel/cpu/topology.c
+++ b/arch/x86/kernel/cpu/topology.c
@@ -23,6 +23,7 @@
  */
 #define pr_fmt(fmt) "CPU topo: " fmt
 #include <linux/cpu.h>
+#include <linux/export.h>

 #include <xen/xen.h>

diff --git a/arch/x86/kernel/cpu/topology_common.c b/arch/x86/kernel/cpu/topology_common.c
index b5a5e1411469..fa841c8b70df 100644
--- a/arch/x86/kernel/cpu/topology_common.c
+++ b/arch/x86/kernel/cpu/topology_common.c
@@ -1,5 +1,6 @@
 // SPDX-License-Identifier: GPL-2.0
 #include <linux/cpu.h>
+#include <linux/export.h>

 #include <xen/xen.h>

diff --git a/arch/x86/kernel/crash.c b/arch/x86/kernel/crash.c
index bcb534688dfe..3dbabdfe9649 100644
--- a/arch/x86/kernel/crash.c
+++ b/arch/x86/kernel/crash.c
@@ -21,7 +21,6 @@
 #include <linux/delay.h>
 #include <linux/elf.h>
 #include <linux/elfcore.h>
-#include <linux/export.h>
 #include <linux/slab.h>
 #include <linux/vmalloc.h>
 #include <linux/memblock.h>
diff --git a/arch/x86/kernel/devicetree.c b/arch/x86/kernel/devicetree.c
index dd8748c45529..2b72ca27eaac 100644
--- a/arch/x86/kernel/devicetree.c
+++ b/arch/x86/kernel/devicetree.c
@@ -3,7 +3,6 @@
  * Architecture specific OF callbacks.
  */
 #include <linux/acpi.h>
-#include <linux/export.h>
 #include <linux/io.h>
 #include <linux/interrupt.h>
 #include <linux/list.h>
diff --git a/arch/x86/kernel/dumpstack_32.c b/arch/x86/kernel/dumpstack_32.c
index 722fd712e1cf..16f5a7984a46 100644
--- a/arch/x86/kernel/dumpstack_32.c
+++ b/arch/x86/kernel/dumpstack_32.c
@@ -9,7 +9,6 @@
 #include <linux/uaccess.h>
 #include <linux/hardirq.h>
 #include <linux/kdebug.h>
-#include <linux/export.h>
 #include <linux/ptrace.h>
 #include <linux/kexec.h>
 #include <linux/sysfs.h>
diff --git a/arch/x86/kernel/dumpstack_64.c b/arch/x86/kernel/dumpstack_64.c
index 6c5defd6569a..4975c5546ba9 100644
--- a/arch/x86/kernel/dumpstack_64.c
+++ b/arch/x86/kernel/dumpstack_64.c
@@ -9,7 +9,6 @@
 #include <linux/uaccess.h>
 #include <linux/hardirq.h>
 #include <linux/kdebug.h>
-#include <linux/export.h>
 #include <linux/ptrace.h>
 #include <linux/kexec.h>
 #include <linux/sysfs.h>
diff --git a/arch/x86/kernel/e820.c b/arch/x86/kernel/e820.c
index c3acbd26408b..9edbb4ebac31 100644
--- a/arch/x86/kernel/e820.c
+++ b/arch/x86/kernel/e820.c
@@ -12,6 +12,7 @@
 #include <linux/crash_dump.h>
 #include <linux/memblock.h>
 #include <linux/suspend.h>
+#include <linux/export.h>
 #include <linux/acpi.h>
 #include <linux/firmware-map.h>
 #include <linux/sort.h>
diff --git a/arch/x86/kernel/early-quirks.c b/arch/x86/kernel/early-quirks.c
index 6b6f32f40cbe..097721a95a8d 100644
--- a/arch/x86/kernel/early-quirks.c
+++ b/arch/x86/kernel/early-quirks.c
@@ -13,6 +13,7 @@
 #include <linux/pci.h>
 #include <linux/acpi.h>
 #include <linux/delay.h>
+#include <linux/export.h>
 #include <linux/pci_ids.h>
 #include <linux/bcma/bcma.h>
 #include <linux/bcma/bcma_regs.h>
diff --git a/arch/x86/kernel/fpu/core.c b/arch/x86/kernel/fpu/core.c
index ea138583dd92..2e4e37bf9d8f 100644
--- a/arch/x86/kernel/fpu/core.c
+++ b/arch/x86/kernel/fpu/core.c
@@ -17,6 +17,7 @@

 #include <uapi/asm/kvm.h>

+#include <linux/export.h>
 #include <linux/hardirq.h>
 #include <linux/pkeys.h>
 #include <linux/vmalloc.h>
diff --git a/arch/x86/kernel/fpu/xstate.c b/arch/x86/kernel/fpu/xstate.c
index 9aa9ac8399ae..6e1dcafc457d 100644
--- a/arch/x86/kernel/fpu/xstate.c
+++ b/arch/x86/kernel/fpu/xstate.c
@@ -7,6 +7,7 @@
 #include <linux/bitops.h>
 #include <linux/compat.h>
 #include <linux/cpu.h>
+#include <linux/export.h>
 #include <linux/mman.h>
 #include <linux/nospec.h>
 #include <linux/pkeys.h>
diff --git a/arch/x86/kernel/head64.c b/arch/x86/kernel/head64.c
index 533fcf5636fc..b58c6128554f 100644
--- a/arch/x86/kernel/head64.c
+++ b/arch/x86/kernel/head64.c
@@ -19,6 +19,7 @@
 #include <linux/memblock.h>
 #include <linux/cc_platform.h>
 #include <linux/pgtable.h>
+#include <linux/export.h>

 #include <asm/asm.h>
 #include <asm/page_64.h>
diff --git a/arch/x86/kernel/i8259.c b/arch/x86/kernel/i8259.c
index 2bade73f49e3..212f5e9959e1 100644
--- a/arch/x86/kernel/i8259.c
+++ b/arch/x86/kernel/i8259.c
@@ -1,6 +1,7 @@
 // SPDX-License-Identifier: GPL-2.0
 #include <linux/linkage.h>
 #include <linux/errno.h>
+#include <linux/export.h>
 #include <linux/signal.h>
 #include <linux/sched.h>
 #include <linux/ioport.h>
diff --git a/arch/x86/kernel/kvm.c b/arch/x86/kernel/kvm.c
index 921c1c783bc1..37a94e2a2d46 100644
--- a/arch/x86/kernel/kvm.c
+++ b/arch/x86/kernel/kvm.c
@@ -29,6 +29,7 @@
 #include <linux/syscore_ops.h>
 #include <linux/cc_platform.h>
 #include <linux/efi.h>
+#include <linux/export.h>
 #include <asm/timer.h>
 #include <asm/cpu.h>
 #include <asm/traps.h>
diff --git a/arch/x86/kernel/paravirt-spinlocks.c b/arch/x86/kernel/paravirt-spinlocks.c
index 9e1ea99ad9df..7f131a15ac9e 100644
--- a/arch/x86/kernel/paravirt-spinlocks.c
+++ b/arch/x86/kernel/paravirt-spinlocks.c
@@ -4,7 +4,6 @@
  * compiled in a FTRACE-compatible way.
  */
 #include <linux/spinlock.h>
-#include <linux/export.h>
 #include <linux/jump_label.h>

 #include <asm/paravirt.h>
diff --git a/arch/x86/kernel/ptrace.c b/arch/x86/kernel/ptrace.c
index 095f04bdabdc..dfc8ebc8b0f8 100644
--- a/arch/x86/kernel/ptrace.c
+++ b/arch/x86/kernel/ptrace.c
@@ -22,7 +22,6 @@
 #include <linux/perf_event.h>
 #include <linux/hw_breakpoint.h>
 #include <linux/rcupdate.h>
-#include <linux/export.h>
 #include <linux/context_tracking.h>
 #include <linux/nospec.h>

diff --git a/arch/x86/kernel/pvclock.c b/arch/x86/kernel/pvclock.c
index b3f81379c2fc..96d944e26dbe 100644
--- a/arch/x86/kernel/pvclock.c
+++ b/arch/x86/kernel/pvclock.c
@@ -11,6 +11,7 @@
 #include <linux/gfp.h>
 #include <linux/memblock.h>
 #include <linux/nmi.h>
+#include <linux/export.h>

 #include <asm/fixmap.h>
 #include <asm/pvclock.h>
diff --git a/arch/x86/kernel/quirks.c b/arch/x86/kernel/quirks.c
index a92f18db9610..221014f3d306 100644
--- a/arch/x86/kernel/quirks.c
+++ b/arch/x86/kernel/quirks.c
@@ -5,6 +5,7 @@
 #include <linux/dmi.h>
 #include <linux/pci.h>
 #include <linux/irq.h>
+#include <linux/export.h>

 #include <asm/hpet.h>
 #include <asm/setup.h>
diff --git a/arch/x86/kernel/setup.c b/arch/x86/kernel/setup.c
index fb27be697128..ea43a022f9a8 100644
--- a/arch/x86/kernel/setup.c
+++ b/arch/x86/kernel/setup.c
@@ -11,6 +11,7 @@
 #include <linux/crash_dump.h>
 #include <linux/dma-map-ops.h>
 #include <linux/efi.h>
+#include <linux/export.h>
 #include <linux/hugetlb.h>
 #include <linux/ima.h>
 #include <linux/init_ohci1394_dma.h>
diff --git a/arch/x86/kernel/stacktrace.c b/arch/x86/kernel/stacktrace.c
index ee117fcf46ed..ddce014f29b2 100644
--- a/arch/x86/kernel/stacktrace.c
+++ b/arch/x86/kernel/stacktrace.c
@@ -7,7 +7,6 @@
 #include <linux/sched/debug.h>
 #include <linux/sched/task_stack.h>
 #include <linux/stacktrace.h>
-#include <linux/export.h>
 #include <linux/uaccess.h>
 #include <asm/stacktrace.h>
 #include <asm/unwind.h>
diff --git a/arch/x86/kernel/static_call.c b/arch/x86/kernel/static_call.c
index 378c388d1b31..3ab922966ab4 100644
--- a/arch/x86/kernel/static_call.c
+++ b/arch/x86/kernel/static_call.c
@@ -1,5 +1,6 @@
 // SPDX-License-Identifier: GPL-2.0
 #include <linux/static_call.h>
+#include <linux/export.h>
 #include <linux/memory.h>
 #include <linux/bug.h>
 #include <asm/text-patching.h>
diff --git a/arch/x86/kernel/tboot.c b/arch/x86/kernel/tboot.c
index 46b8f1f16676..b6a1bb741ebd 100644
--- a/arch/x86/kernel/tboot.c
+++ b/arch/x86/kernel/tboot.c
@@ -8,7 +8,6 @@

 #include <linux/init_task.h>
 #include <linux/spinlock.h>
-#include <linux/export.h>
 #include <linux/delay.h>
 #include <linux/sched.h>
 #include <linux/init.h>
diff --git a/arch/x86/kernel/traps.c b/arch/x86/kernel/traps.c
index c5c897a86418..5a038f66271b 100644
--- a/arch/x86/kernel/traps.c
+++ b/arch/x86/kernel/traps.c
@@ -22,7 +22,6 @@
 #include <linux/kdebug.h>
 #include <linux/kgdb.h>
 #include <linux/kernel.h>
-#include <linux/export.h>
 #include <linux/ptrace.h>
 #include <linux/uprobes.h>
 #include <linux/string.h>
diff --git a/arch/x86/kernel/unwind_frame.c b/arch/x86/kernel/unwind_frame.c
index d8ba93778ae3..f3b893c0e5e7 100644
--- a/arch/x86/kernel/unwind_frame.c
+++ b/arch/x86/kernel/unwind_frame.c
@@ -3,6 +3,7 @@
 #include <linux/sched/task.h>
 #include <linux/sched/task_stack.h>
 #include <linux/interrupt.h>
+#include <linux/export.h>
 #include <asm/sections.h>
 #include <asm/ptrace.h>
 #include <asm/bitops.h>
diff --git a/arch/x86/kernel/unwind_guess.c b/arch/x86/kernel/unwind_guess.c
index 884d68a6e714..86813ae9d57c 100644
--- a/arch/x86/kernel/unwind_guess.c
+++ b/arch/x86/kernel/unwind_guess.c
@@ -1,6 +1,7 @@
 // SPDX-License-Identifier: GPL-2.0-only
 #include <linux/sched.h>
 #include <linux/ftrace.h>
+#include <linux/export.h>
 #include <asm/ptrace.h>
 #include <asm/bitops.h>
 #include <asm/stacktrace.h>
diff --git a/arch/x86/kernel/unwind_orc.c b/arch/x86/kernel/unwind_orc.c
index 977ee75e047c..ec0cd3c54616 100644
--- a/arch/x86/kernel/unwind_orc.c
+++ b/arch/x86/kernel/unwind_orc.c
@@ -1,5 +1,6 @@
 // SPDX-License-Identifier: GPL-2.0-only
 #include <linux/objtool.h>
+#include <linux/export.h>
 #include <linux/module.h>
 #include <linux/sort.h>
 #include <asm/ptrace.h>
diff --git a/arch/x86/kvm/hyperv.c b/arch/x86/kvm/hyperv.c
index 24f0318c50d7..09f9de4555dd 100644
--- a/arch/x86/kvm/hyperv.c
+++ b/arch/x86/kvm/hyperv.c
@@ -33,6 +33,7 @@
 #include <linux/sched/cputime.h>
 #include <linux/spinlock.h>
 #include <linux/eventfd.h>
+#include <linux/export.h>

 #include <asm/apicdef.h>
 #include <asm/mshyperv.h>
diff --git a/arch/x86/kvm/ioapic.c b/arch/x86/kvm/ioapic.c
index 45dae2d5d2f1..bfa87e74fe18 100644
--- a/arch/x86/kvm/ioapic.c
+++ b/arch/x86/kvm/ioapic.c
@@ -36,7 +36,6 @@
 #include <linux/hrtimer.h>
 #include <linux/io.h>
 #include <linux/slab.h>
-#include <linux/export.h>
 #include <linux/nospec.h>
 #include <asm/processor.h>
 #include <asm/page.h>
diff --git a/arch/x86/kvm/kvm_onhyperv.c b/arch/x86/kvm/kvm_onhyperv.c
index ded0bd688c65..73a97e1dcdbd 100644
--- a/arch/x86/kvm/kvm_onhyperv.c
+++ b/arch/x86/kvm/kvm_onhyperv.c
@@ -4,6 +4,7 @@
  */
 #define pr_fmt(fmt) KBUILD_MODNAME ": " fmt

+#include <linux/export.h>
 #include <linux/kvm_host.h>
 #include <asm/mshyperv.h>

diff --git a/arch/x86/kvm/mmu/page_track.c b/arch/x86/kvm/mmu/page_track.c
index 1b17b12393a8..2c407d7edd09 100644
--- a/arch/x86/kvm/mmu/page_track.c
+++ b/arch/x86/kvm/mmu/page_track.c
@@ -15,6 +15,7 @@
 #include <linux/lockdep.h>
 #include <linux/kvm_host.h>
 #include <linux/rculist.h>
+#include <linux/export.h>

 #include "mmu.h"
 #include "mmu_internal.h"
diff --git a/arch/x86/kvm/mmu/spte.c b/arch/x86/kvm/mmu/spte.c
index cfce03d8f123..217a802e86f9 100644
--- a/arch/x86/kvm/mmu/spte.c
+++ b/arch/x86/kvm/mmu/spte.c
@@ -9,6 +9,7 @@
  */
 #define pr_fmt(fmt) KBUILD_MODNAME ": " fmt

+#include <linux/export.h>
 #include <linux/kvm_host.h>
 #include "mmu.h"
 #include "mmu_internal.h"
diff --git a/arch/x86/kvm/mmu/tdp_mmu.c b/arch/x86/kvm/mmu/tdp_mmu.c
index 7f3d7229b2c1..1df1726f506c 100644
--- a/arch/x86/kvm/mmu/tdp_mmu.c
+++ b/arch/x86/kvm/mmu/tdp_mmu.c
@@ -8,6 +8,7 @@
 #include "tdp_mmu.h"
 #include "spte.h"

+#include <linux/export.h>
 #include <asm/cmpxchg.h>
 #include <trace/events/kvm.h>

diff --git a/arch/x86/kvm/pmu.c b/arch/x86/kvm/pmu.c
index 75e9cfc689f8..308a6ae502e3 100644
--- a/arch/x86/kvm/pmu.c
+++ b/arch/x86/kvm/pmu.c
@@ -16,6 +16,7 @@
 #include <linux/perf_event.h>
 #include <linux/bsearch.h>
 #include <linux/sort.h>
+#include <linux/export.h>
 #include <asm/perf_event.h>
 #include <asm/cpu_device_id.h>
 #include "x86.h"
diff --git a/arch/x86/kvm/smm.c b/arch/x86/kvm/smm.c
index 9864c057187d..4b13a6346f06 100644
--- a/arch/x86/kvm/smm.c
+++ b/arch/x86/kvm/smm.c
@@ -2,6 +2,7 @@
 #define pr_fmt(fmt) KBUILD_MODNAME ": " fmt

 #include <linux/kvm_host.h>
+#include <linux/export.h>
 #include "x86.h"
 #include "kvm_cache_regs.h"
 #include "kvm_emulate.h"
diff --git a/arch/x86/lib/atomic64_32.c b/arch/x86/lib/atomic64_32.c
index a0b4a350daa7..04a6901a8969 100644
--- a/arch/x86/lib/atomic64_32.c
+++ b/arch/x86/lib/atomic64_32.c
@@ -1,4 +1,3 @@
 #define ATOMIC64_EXPORT EXPORT_SYMBOL

-#include <linux/export.h>
 #include <linux/atomic.h>
diff --git a/arch/x86/lib/crc-t10dif.c b/arch/x86/lib/crc-t10dif.c
index db7ce59c31ac..c8c2108675cd 100644
--- a/arch/x86/lib/crc-t10dif.c
+++ b/arch/x86/lib/crc-t10dif.c
@@ -6,6 +6,7 @@
  */

 #include <linux/crc-t10dif.h>
+#include <linux/export.h>
 #include <linux/module.h>
 #include "crc-pclmul-template.h"

diff --git a/arch/x86/lib/crc32.c b/arch/x86/lib/crc32.c
index d09343e2cea9..21e84e3c94eb 100644
--- a/arch/x86/lib/crc32.c
+++ b/arch/x86/lib/crc32.c
@@ -8,6 +8,7 @@
  */

 #include <linux/crc32.h>
+#include <linux/export.h>
 #include <linux/module.h>
 #include "crc-pclmul-template.h"

diff --git a/arch/x86/lib/crc64.c b/arch/x86/lib/crc64.c
index 351a09f5813e..6c1a1beb5c97 100644
--- a/arch/x86/lib/crc64.c
+++ b/arch/x86/lib/crc64.c
@@ -6,6 +6,7 @@
  */

 #include <linux/crc64.h>
+#include <linux/export.h>
 #include <linux/module.h>
 #include "crc-pclmul-template.h"

diff --git a/arch/x86/lib/crypto/blake2s-glue.c b/arch/x86/lib/crypto/blake2s-glue.c
index adc296cd17c9..e65cebbdc043 100644
--- a/arch/x86/lib/crypto/blake2s-glue.c
+++ b/arch/x86/lib/crypto/blake2s-glue.c
@@ -8,6 +8,7 @@
 #include <asm/processor.h>
 #include <asm/simd.h>
 #include <crypto/internal/blake2s.h>
+#include <linux/export.h>
 #include <linux/init.h>
 #include <linux/jump_label.h>
 #include <linux/kernel.h>
diff --git a/arch/x86/lib/crypto/chacha_glue.c b/arch/x86/lib/crypto/chacha_glue.c
index 10b2c945f541..7e3bf4b091f1 100644
--- a/arch/x86/lib/crypto/chacha_glue.c
+++ b/arch/x86/lib/crypto/chacha_glue.c
@@ -7,6 +7,7 @@

 #include <asm/simd.h>
 #include <crypto/chacha.h>
+#include <linux/export.h>
 #include <linux/jump_label.h>
 #include <linux/kernel.h>
 #include <linux/module.h>
diff --git a/arch/x86/lib/crypto/poly1305_glue.c b/arch/x86/lib/crypto/poly1305_glue.c
index b7e78a583e07..c2bc5b831551 100644
--- a/arch/x86/lib/crypto/poly1305_glue.c
+++ b/arch/x86/lib/crypto/poly1305_glue.c
@@ -6,6 +6,7 @@
 #include <asm/cpu_device_id.h>
 #include <asm/fpu/api.h>
 #include <crypto/internal/poly1305.h>
+#include <linux/export.h>
 #include <linux/jump_label.h>
 #include <linux/kernel.h>
 #include <linux/module.h>
diff --git a/arch/x86/lib/crypto/sha256.c b/arch/x86/lib/crypto/sha256.c
index 80380f8fdcee..46d5d174e821 100644
--- a/arch/x86/lib/crypto/sha256.c
+++ b/arch/x86/lib/crypto/sha256.c
@@ -6,6 +6,7 @@
  */
 #include <asm/fpu/api.h>
 #include <crypto/internal/sha2.h>
+#include <linux/export.h>
 #include <linux/kernel.h>
 #include <linux/module.h>
 #include <linux/static_call.h>
diff --git a/arch/x86/lib/iomem.c b/arch/x86/lib/iomem.c
index c20e04764edc..20f90c60e34e 100644
--- a/arch/x86/lib/iomem.c
+++ b/arch/x86/lib/iomem.c
@@ -1,5 +1,6 @@
 #include <linux/string.h>
 #include <linux/module.h>
+#include <linux/export.h>
 #include <linux/io.h>
 #include <linux/kmsan-checks.h>

diff --git a/arch/x86/mm/cpu_entry_area.c b/arch/x86/mm/cpu_entry_area.c
index 575f863f3c75..2ffd4628643b 100644
--- a/arch/x86/mm/cpu_entry_area.c
+++ b/arch/x86/mm/cpu_entry_area.c
@@ -5,6 +5,7 @@
 #include <linux/kallsyms.h>
 #include <linux/kcore.h>
 #include <linux/pgtable.h>
+#include <linux/export.h>

 #include <asm/cpu_entry_area.h>
 #include <asm/fixmap.h>
diff --git a/arch/x86/mm/dump_pagetables.c b/arch/x86/mm/dump_pagetables.c
index a4700ef6eb64..90df00f4ef88 100644
--- a/arch/x86/mm/dump_pagetables.c
+++ b/arch/x86/mm/dump_pagetables.c
@@ -9,6 +9,7 @@
  */

 #include <linux/debugfs.h>
+#include <linux/export.h>
 #include <linux/kasan.h>
 #include <linux/mm.h>
 #include <linux/init.h>
diff --git a/arch/x86/mm/init.c b/arch/x86/mm/init.c
index 7456df985d96..00c7088c5835 100644
--- a/arch/x86/mm/init.c
+++ b/arch/x86/mm/init.c
@@ -8,6 +8,7 @@
 #include <linux/kmemleak.h>
 #include <linux/sched/task.h>
 #include <linux/execmem.h>
+#include <linux/export.h>

 #include <asm/set_memory.h>
 #include <asm/cpu_device_id.h>
diff --git a/arch/x86/mm/init_32.c b/arch/x86/mm/init_32.c
index 607d6a2e66e2..633887c582af 100644
--- a/arch/x86/mm/init_32.c
+++ b/arch/x86/mm/init_32.c
@@ -31,6 +31,7 @@
 #include <linux/cpumask.h>
 #include <linux/gfp.h>
 #include <linux/execmem.h>
+#include <linux/export.h>

 #include <asm/asm.h>
 #include <asm/bios_ebda.h>
diff --git a/arch/x86/mm/init_64.c b/arch/x86/mm/init_64.c
index ee66fae9ebcc..e3bd8adea411 100644
--- a/arch/x86/mm/init_64.c
+++ b/arch/x86/mm/init_64.c
@@ -35,6 +35,7 @@
 #include <linux/kcore.h>
 #include <linux/bootmem_info.h>
 #include <linux/execmem.h>
+#include <linux/export.h>

 #include <asm/processor.h>
 #include <asm/bios_ebda.h>
diff --git a/arch/x86/mm/ioremap.c b/arch/x86/mm/ioremap.c
index 12c8180ca1ba..4e2101e637ba 100644
--- a/arch/x86/mm/ioremap.c
+++ b/arch/x86/mm/ioremap.c
@@ -17,6 +17,7 @@
 #include <linux/mmiotrace.h>
 #include <linux/cc_platform.h>
 #include <linux/efi.h>
+#include <linux/export.h>
 #include <linux/pgtable.h>
 #include <linux/kmsan.h>

diff --git a/arch/x86/mm/mem_encrypt_amd.c b/arch/x86/mm/mem_encrypt_amd.c
index faf3a13fb6ba..cb069276f756 100644
--- a/arch/x86/mm/mem_encrypt_amd.c
+++ b/arch/x86/mm/mem_encrypt_amd.c
@@ -18,6 +18,7 @@
 #include <linux/bitops.h>
 #include <linux/dma-mapping.h>
 #include <linux/cc_platform.h>
+#include <linux/export.h>

 #include <asm/tlbflush.h>
 #include <asm/fixmap.h>
diff --git a/arch/x86/mm/mmio-mod.c b/arch/x86/mm/mmio-mod.c
index c3317f0650d8..7555c0ef2cf3 100644
--- a/arch/x86/mm/mmio-mod.c
+++ b/arch/x86/mm/mmio-mod.c
@@ -21,6 +21,7 @@
 #include <linux/atomic.h>
 #include <linux/percpu.h>
 #include <linux/cpu.h>
+#include <linux/export.h>

 #include "pf_in.h"

diff --git a/arch/x86/mm/numa.c b/arch/x86/mm/numa.c
index c24890c40138..5e3ac16ceea5 100644
--- a/arch/x86/mm/numa.c
+++ b/arch/x86/mm/numa.c
@@ -14,6 +14,7 @@
 #include <linux/topology.h>
 #include <linux/sort.h>
 #include <linux/numa_memblks.h>
+#include <linux/export.h>

 #include <asm/e820/api.h>
 #include <asm/proto.h>
diff --git a/arch/x86/mm/pat/memtype.c b/arch/x86/mm/pat/memtype.c
index 2e7923844afe..3eeee5b2384a 100644
--- a/arch/x86/mm/pat/memtype.c
+++ b/arch/x86/mm/pat/memtype.c
@@ -34,6 +34,7 @@
 #include <linux/seq_file.h>
 #include <linux/memblock.h>
 #include <linux/debugfs.h>
+#include <linux/export.h>
 #include <linux/ioport.h>
 #include <linux/kernel.h>
 #include <linux/pfn_t.h>
diff --git a/arch/x86/mm/pat/set_memory.c b/arch/x86/mm/pat/set_memory.c
index 46edc11726b7..89973d5e4327 100644
--- a/arch/x86/mm/pat/set_memory.c
+++ b/arch/x86/mm/pat/set_memory.c
@@ -22,6 +22,7 @@
 #include <linux/cc_platform.h>
 #include <linux/set_memory.h>
 #include <linux/memregion.h>
+#include <linux/export.h>

 #include <asm/e820/api.h>
 #include <asm/processor.h>
diff --git a/arch/x86/mm/pgtable.c b/arch/x86/mm/pgtable.c
index ddf248c3ee7d..92ee7b5cd93b 100644
--- a/arch/x86/mm/pgtable.c
+++ b/arch/x86/mm/pgtable.c
@@ -1,6 +1,7 @@
 // SPDX-License-Identifier: GPL-2.0
 #include <linux/mm.h>
 #include <linux/gfp.h>
+#include <linux/export.h>
 #include <linux/hugetlb.h>
 #include <asm/pgalloc.h>
 #include <asm/tlb.h>
diff --git a/arch/x86/mm/pgtable_32.c b/arch/x86/mm/pgtable_32.c
index c234634e26ba..2acb05736cf1 100644
--- a/arch/x86/mm/pgtable_32.c
+++ b/arch/x86/mm/pgtable_32.c
@@ -9,6 +9,7 @@
 #include <linux/highmem.h>
 #include <linux/pagemap.h>
 #include <linux/spinlock.h>
+#include <linux/export.h>

 #include <asm/cpu_entry_area.h>
 #include <asm/fixmap.h>
diff --git a/arch/x86/pci/pcbios.c b/arch/x86/pci/pcbios.c
index 244c643bb0b5..1956cb58e281 100644
--- a/arch/x86/pci/pcbios.c
+++ b/arch/x86/pci/pcbios.c
@@ -5,6 +5,7 @@

 #include <linux/bits.h>
 #include <linux/bitfield.h>
+#include <linux/export.h>
 #include <linux/pci.h>
 #include <linux/init.h>
 #include <linux/slab.h>
diff --git a/arch/x86/platform/efi/efi.c b/arch/x86/platform/efi/efi.c
index 463b784499a8..6288436d8ec3 100644
--- a/arch/x86/platform/efi/efi.c
+++ b/arch/x86/platform/efi/efi.c
@@ -35,7 +35,6 @@
 #include <linux/init.h>
 #include <linux/efi.h>
 #include <linux/efi-bgrt.h>
-#include <linux/export.h>
 #include <linux/memblock.h>
 #include <linux/slab.h>
 #include <linux/spinlock.h>
diff --git a/arch/x86/platform/efi/efi_64.c b/arch/x86/platform/efi/efi_64.c
index e7e8f77f77f8..627d084c344d 100644
--- a/arch/x86/platform/efi/efi_64.c
+++ b/arch/x86/platform/efi/efi_64.c
@@ -27,7 +27,6 @@
 #include <linux/ioport.h>
 #include <linux/mc146818rtc.h>
 #include <linux/efi.h>
-#include <linux/export.h>
 #include <linux/uaccess.h>
 #include <linux/io.h>
 #include <linux/reboot.h>
diff --git a/arch/x86/platform/efi/quirks.c b/arch/x86/platform/efi/quirks.c
index 553f330198f2..4119b2f693bc 100644
--- a/arch/x86/platform/efi/quirks.c
+++ b/arch/x86/platform/efi/quirks.c
@@ -7,6 +7,7 @@
 #include <linux/time.h>
 #include <linux/types.h>
 #include <linux/efi.h>
+#include <linux/export.h>
 #include <linux/slab.h>
 #include <linux/memblock.h>
 #include <linux/acpi.h>
diff --git a/arch/x86/platform/intel-mid/intel-mid.c b/arch/x86/platform/intel-mid/intel-mid.c
index a8e75f8c14fd..a877e52cb38e 100644
--- a/arch/x86/platform/intel-mid/intel-mid.c
+++ b/arch/x86/platform/intel-mid/intel-mid.c
@@ -15,7 +15,6 @@
 #include <linux/regulator/machine.h>
 #include <linux/scatterlist.h>
 #include <linux/irq.h>
-#include <linux/export.h>
 #include <linux/notifier.h>

 #include <asm/setup.h>
diff --git a/arch/x86/platform/intel-mid/pwr.c b/arch/x86/platform/intel-mid/pwr.c
index cd7e0c71adde..77c0ff63ee28 100644
--- a/arch/x86/platform/intel-mid/pwr.c
+++ b/arch/x86/platform/intel-mid/pwr.c
@@ -20,7 +20,6 @@
 #include <linux/errno.h>
 #include <linux/interrupt.h>
 #include <linux/kernel.h>
-#include <linux/export.h>
 #include <linux/mutex.h>
 #include <linux/pci.h>

diff --git a/arch/x86/platform/intel-quark/imr.c b/arch/x86/platform/intel-quark/imr.c
index ee25b032c0b3..f97c11d3c1d2 100644
--- a/arch/x86/platform/intel-quark/imr.c
+++ b/arch/x86/platform/intel-quark/imr.c
@@ -32,6 +32,7 @@
 #include <asm/io.h>

 #include <linux/debugfs.h>
+#include <linux/export.h>
 #include <linux/init.h>
 #include <linux/mm.h>
 #include <linux/types.h>
diff --git a/arch/x86/platform/intel/iosf_mbi.c b/arch/x86/platform/intel/iosf_mbi.c
index 40ae94db20d8..49af88f1deda 100644
--- a/arch/x86/platform/intel/iosf_mbi.c
+++ b/arch/x86/platform/intel/iosf_mbi.c
@@ -18,6 +18,7 @@
 #include <linux/capability.h>
 #include <linux/pm_qos.h>
 #include <linux/wait.h>
+#include <linux/export.h>

 #include <asm/iosf_mbi.h>

diff --git a/arch/x86/platform/scx200/scx200_32.c b/arch/x86/platform/scx200/scx200_32.c
index 80662b72035d..97386353b0f5 100644
--- a/arch/x86/platform/scx200/scx200_32.c
+++ b/arch/x86/platform/scx200/scx200_32.c
@@ -7,6 +7,7 @@

 #include <linux/module.h>
 #include <linux/errno.h>
+#include <linux/export.h>
 #include <linux/kernel.h>
 #include <linux/init.h>
 #include <linux/mutex.h>
diff --git a/arch/x86/video/video-common.c b/arch/x86/video/video-common.c
index 81fc97a2a837..57070d9e1a56 100644
--- a/arch/x86/video/video-common.c
+++ b/arch/x86/video/video-common.c
@@ -7,6 +7,7 @@
  *
  */

+#include <linux/export.h>
 #include <linux/module.h>
 #include <linux/pci.h>
 #include <linux/vgaarb.h>
diff --git a/arch/x86/virt/svm/sev.c b/arch/x86/virt/svm/sev.c
index 942372e69b4d..7cd06bb3aa9f 100644
--- a/arch/x86/virt/svm/sev.c
+++ b/arch/x86/virt/svm/sev.c
@@ -19,6 +19,7 @@
 #include <linux/iommu.h>
 #include <linux/amd-iommu.h>
 #include <linux/nospec.h>
+#include <linux/export.h>

 #include <asm/sev.h>
 #include <asm/processor.h>
diff --git a/arch/x86/virt/vmx/tdx/tdx.c b/arch/x86/virt/vmx/tdx/tdx.c
index 2457d13c3f9e..e5bb81dc8497 100644
--- a/arch/x86/virt/vmx/tdx/tdx.c
+++ b/arch/x86/virt/vmx/tdx/tdx.c
@@ -12,6 +12,7 @@
 #include <linux/cache.h>
 #include <linux/init.h>
 #include <linux/errno.h>
+#include <linux/export.h>
 #include <linux/printk.h>
 #include <linux/cpu.h>
 #include <linux/spinlock.h>
diff --git a/arch/x86/xen/enlighten.c b/arch/x86/xen/enlighten.c
index 53282dc7d5ac..4b2b038a1ec8 100644
--- a/arch/x86/xen/enlighten.c
+++ b/arch/x86/xen/enlighten.c
@@ -2,6 +2,7 @@

 #include <linux/console.h>
 #include <linux/cpu.h>
+#include <linux/export.h>
 #include <linux/instrumentation.h>
 #include <linux/kexec.h>
 #include <linux/memblock.h>
diff --git a/arch/x86/xen/enlighten_hvm.c b/arch/x86/xen/enlighten_hvm.c
index fe57ff85d004..4399a1796861 100644
--- a/arch/x86/xen/enlighten_hvm.c
+++ b/arch/x86/xen/enlighten_hvm.c
@@ -2,6 +2,7 @@

 #include <linux/acpi.h>
 #include <linux/cpu.h>
+#include <linux/export.h>
 #include <linux/kexec.h>
 #include <linux/memblock.h>
 #include <linux/virtio_anchor.h>
diff --git a/arch/x86/xen/mmu.c b/arch/x86/xen/mmu.c
index c4c479373249..da38470e6131 100644
--- a/arch/x86/xen/mmu.c
+++ b/arch/x86/xen/mmu.c
@@ -1,6 +1,7 @@
 // SPDX-License-Identifier: GPL-2.0

 #include <linux/pfn.h>
+#include <linux/export.h>
 #include <asm/xen/page.h>
 #include <asm/xen/hypercall.h>
 #include <xen/interface/memory.h>

Signed-off-by: Zhenghan Cheng <your_email@example.com>
---
 arch/x86/coco/sev/core.c                  | 1 +
 arch/x86/crypto/aria_aesni_avx2_glue.c    | 1 +
 arch/x86/crypto/aria_aesni_avx_glue.c     | 1 +
 arch/x86/crypto/camellia_aesni_avx_glue.c | 1 +
 arch/x86/crypto/camellia_glue.c           | 1 +
 arch/x86/crypto/curve25519-x86_64.c       | 1 +
 arch/x86/crypto/serpent_avx_glue.c        | 1 +
 arch/x86/crypto/sm4_aesni_avx_glue.c      | 1 +
 arch/x86/crypto/twofish_glue.c            | 1 +
 arch/x86/crypto/twofish_glue_3way.c       | 1 +
 arch/x86/events/intel/core.c              | 1 -
 arch/x86/events/intel/lbr.c               | 1 +
 arch/x86/events/intel/pt.c                | 2 ++
 arch/x86/events/zhaoxin/core.c            | 1 -
 arch/x86/hyperv/hv_init.c                 | 1 +
 arch/x86/hyperv/irqdomain.c               | 1 +
 arch/x86/hyperv/ivm.c                     | 1 +
 arch/x86/hyperv/nested.c                  | 2 +-
 arch/x86/kernel/acpi/cppc.c               | 1 +
 arch/x86/kernel/alternative.c             | 1 +
 arch/x86/kernel/amd_node.c                | 1 +
 arch/x86/kernel/apic/apic_common.c        | 1 +
 arch/x86/kernel/apic/msi.c                | 1 +
 arch/x86/kernel/apic/vector.c             | 1 +
 arch/x86/kernel/cpu/acrn.c                | 1 +
 arch/x86/kernel/cpu/aperfmperf.c          | 1 +
 arch/x86/kernel/cpu/bugs.c                | 1 +
 arch/x86/kernel/cpu/bus_lock.c            | 1 +
 arch/x86/kernel/cpu/mce/amd.c             | 1 +
 arch/x86/kernel/cpu/mce/dev-mcelog.c      | 1 +
 arch/x86/kernel/cpu/microcode/intel.c     | 1 +
 arch/x86/kernel/cpu/sgx/main.c            | 1 +
 arch/x86/kernel/cpu/sgx/virt.c            | 1 +
 arch/x86/kernel/cpu/topology.c            | 1 +
 arch/x86/kernel/cpu/topology_common.c     | 1 +
 arch/x86/kernel/crash.c                   | 1 -
 arch/x86/kernel/devicetree.c              | 1 -
 arch/x86/kernel/dumpstack_32.c            | 1 -
 arch/x86/kernel/dumpstack_64.c            | 1 -
 arch/x86/kernel/e820.c                    | 1 +
 arch/x86/kernel/early-quirks.c            | 1 +
 arch/x86/kernel/fpu/core.c                | 1 +
 arch/x86/kernel/fpu/xstate.c              | 1 +
 arch/x86/kernel/head64.c                  | 1 +
 arch/x86/kernel/i8259.c                   | 1 +
 arch/x86/kernel/kvm.c                     | 1 +
 arch/x86/kernel/paravirt-spinlocks.c      | 1 -
 arch/x86/kernel/ptrace.c                  | 1 -
 arch/x86/kernel/pvclock.c                 | 1 +
 arch/x86/kernel/quirks.c                  | 1 +
 arch/x86/kernel/setup.c                   | 1 +
 arch/x86/kernel/stacktrace.c              | 1 -
 arch/x86/kernel/static_call.c             | 1 +
 arch/x86/kernel/tboot.c                   | 1 -
 arch/x86/kernel/traps.c                   | 1 -
 arch/x86/kernel/unwind_frame.c            | 1 +
 arch/x86/kernel/unwind_guess.c            | 1 +
 arch/x86/kernel/unwind_orc.c              | 1 +
 arch/x86/kvm/hyperv.c                     | 1 +
 arch/x86/kvm/ioapic.c                     | 1 -
 arch/x86/kvm/kvm_onhyperv.c               | 1 +
 arch/x86/kvm/mmu/page_track.c             | 1 +
 arch/x86/kvm/mmu/spte.c                   | 1 +
 arch/x86/kvm/mmu/tdp_mmu.c                | 1 +
 arch/x86/kvm/pmu.c                        | 1 +
 arch/x86/kvm/smm.c                        | 1 +
 arch/x86/lib/atomic64_32.c                | 1 -
 arch/x86/lib/crc-t10dif.c                 | 1 +
 arch/x86/lib/crc32.c                      | 1 +
 arch/x86/lib/crc64.c                      | 1 +
 arch/x86/lib/crypto/blake2s-glue.c        | 1 +
 arch/x86/lib/crypto/chacha_glue.c         | 1 +
 arch/x86/lib/crypto/poly1305_glue.c       | 1 +
 arch/x86/lib/crypto/sha256.c              | 1 +
 arch/x86/lib/iomem.c                      | 1 +
 arch/x86/mm/cpu_entry_area.c              | 1 +
 arch/x86/mm/dump_pagetables.c             | 1 +
 arch/x86/mm/init.c                        | 1 +
 arch/x86/mm/init_32.c                     | 1 +
 arch/x86/mm/init_64.c                     | 1 +
 arch/x86/mm/ioremap.c                     | 1 +
 arch/x86/mm/mem_encrypt_amd.c             | 1 +
 arch/x86/mm/mmio-mod.c                    | 1 +
 arch/x86/mm/numa.c                        | 1 +
 arch/x86/mm/pat/memtype.c                 | 1 +
 arch/x86/mm/pat/set_memory.c              | 1 +
 arch/x86/mm/pgtable.c                     | 1 +
 arch/x86/mm/pgtable_32.c                  | 1 +
 arch/x86/pci/pcbios.c                     | 1 +
 arch/x86/platform/efi/efi.c               | 1 -
 arch/x86/platform/efi/efi_64.c            | 1 -
 arch/x86/platform/efi/quirks.c            | 1 +
 arch/x86/platform/intel-mid/intel-mid.c   | 1 -
 arch/x86/platform/intel-mid/pwr.c         | 1 -
 arch/x86/platform/intel-quark/imr.c       | 1 +
 arch/x86/platform/intel/iosf_mbi.c        | 1 +
 arch/x86/platform/scx200/scx200_32.c      | 1 +
 arch/x86/video/video-common.c             | 1 +
 arch/x86/virt/svm/sev.c                   | 1 +
 arch/x86/virt/vmx/tdx/tdx.c               | 1 +
 arch/x86/xen/enlighten.c                  | 1 +
 arch/x86/xen/enlighten_hvm.c              | 1 +
 arch/x86/xen/mmu.c                        | 1 +
 103 files changed, 87 insertions(+), 18 deletions(-)

----------------------------------------------------------------------

New:  tun: remove unnecessary tun_xdp_hdr structure
[PATCH net-next 1/2] tun: remove unnecessary tun_xdp_hdr structure
Author: Jason Wang <jasowang@redhat.com>

With f95f0f95cfb7("net, xdp: Introduce xdp_init_buff utility routine"),
buffer length could be stored as frame size so there's no need to have
a dedicated tun_xdp_hdr structure. We can simply store virtio net
header instead.

Signed-off-by: Jason Wang <jasowang@redhat.com>
---
 drivers/net/tap.c      | 5 ++---
 drivers/net/tun.c      | 5 ++---
 drivers/vhost/net.c    | 8 ++------
 include/linux/if_tun.h | 5 -----
 4 files changed, 6 insertions(+), 17 deletions(-)

----------------------------------------------------------------------

New:  memory: Export a helper to get intersection of a MemoryRegionSection with a given range
[PATCH v7 1/5] memory: Export a helper to get intersection of a MemoryRegionSection with a given range
Author: Chenyi Qiang <chenyi.qiang@intel.com>

Rename the helper to memory_region_section_intersect_range() to make it
more generic. Meanwhile, define the @end as Int128 and replace the
related operations with Int128_* format since the helper is exported as
a wider API.

Suggested-by: Alexey Kardashevskiy <aik@amd.com>
Reviewed-by: Alexey Kardashevskiy <aik@amd.com>
Reviewed-by: Pankaj Gupta <pankaj.gupta@amd.com>
Reviewed-by: David Hildenbrand <david@redhat.com>
Reviewed-by: Zhao Liu <zhao1.liu@intel.com>
Reviewed-by: Xiaoyao Li <xiaoyao.li@intel.com>
Signed-off-by: Chenyi Qiang <chenyi.qiang@intel.com>
---
Changes in v7:
    - Add Reivewed-by from Xiaoyao and Pankaj

Changes in v6:
    - No change.

Changes in v5:
    - Indent change for int128 ops to avoid the line over 80
    - Add two Review-by from Alexey and Zhao
---
 hw/virtio/virtio-mem.c  | 32 +++++---------------------------
 include/system/memory.h | 30 ++++++++++++++++++++++++++++++
 2 files changed, 35 insertions(+), 27 deletions(-)

----------------------------------------------------------------------

New:  Enable shared device assignment
[PATCH v7 0/5] Enable shared device assignment
Author: Chenyi Qiang <chenyi.qiang@intel.com>

This is the v7 series of the shared device assignment support.

There are not many differences compared to the previous version [1]. The
primary changes include some code cleanup in patch #4 and the addition
of a new comment in patch #5 to describe the brief period of status
consistency.

Overview of this series:

- Patch 1-3: Preparation patches. These include function exposure and
  some function prototype changes.
- Patch 4: Introduce a new object to implement RamDiscardManager
  interface and a helper to notify the shared/private state change.
- Patch 5: Enable coordinated discarding of RAM with guest_memfd through
  the RamDiscardManager interface.

---

Background
==========
Confidential VMs have two classes of memory: shared and private memory.
Shared memory is accessible from the host/VMM while private memory is
not. Confidential VMs can decide which memory is shared/private and
convert memory between shared and private at runtime.

"guest_memfd" is a new kind of fd whose primary goal is to serve guest
private memory. In current implementation, shared memory is allocated
with normal methods (e.g. mmap or fallocate) while private memory is
allocated from guest_memfd. When a VM performs memory conversions, QEMU
frees pages via madvise or via PUNCH_HOLE on memfd or guest_memfd from
one side, and allocates new pages from the other side. This will cause a
stale IOMMU mapping issue mentioned in [2] when we try to enable shared
device assignment in confidential VMs.

Solution
========
The key to enable shared device assignment is to update the IOMMU mappings
on page conversion. RamDiscardManager, an existing interface currently
utilized by virtio-mem, offers a means to modify IOMMU mappings in
accordance with VM page assignment. Page conversions is similar to
hot-removing a page in one mode and adding it back in the other.

This series implements a RamDiscardmanager for confidential VMs and
utilizes its infrastructure to notify VFIO of page conversions.

Limitation and future extension
===============================
This series only supports the basic shared device assignment functionality.
There are still some limitations and areas that can be extended or
optimized in the future.

Relationship with in-place conversion
-------------------------------------
In-place page conversion is the ongoing work to allow mmap() of
guest_memfd to userspace so that both private and shared memory can use
the same physical memory as the backend. This new design eliminates the
need to discard pages during shared/private conversions. When it is
ready, shared device assignment needs be adjusted to achieve an
unmap-before-conversion-to-private and map-after-conversion-to-shared
sequence to be compatible with the change.

Partial unmap limitation
------------------------
VFIO expects the DMA mapping for a specific IOVA to be mapped and
unmapped with the same granularity. The guest may perform partial
conversion, such as converting a small region within a larger one. To
prevent such invalid cases, current operations are performed with 4K
granularity. This could be optimized after DMA mapping cut operation
[3] is introduced in the future. We can always perform a
split-before-unmap if partial conversions happens. If the split
succeeds, the unmap will succeed and be atomic. If the split fails, the
unmap process fails.

More attributes management
--------------------------
Current RamDiscardManager can only manage a pair of opposite states like
populated/discared or shared/private. If more states need to be
considered, for example, support virtio-mem in confidential VMs, three
states would be possible (shared populated/private populated/discard).
Current framework cannot handle such scenario and we need to think of
some new framework at that time [4].

Memory overhead optimization
----------------------------
A comment from Baolu [5] suggests considering using Maple Tree or a generic
interval tree to manage private/shared state instead of a bitmap, which
can reduce memory consumption. This optmization can also be considered
in other bitmap use cases like dirty bitmaps for guest RAM.

Testing
=======
This patch series is tested based on kenrel v6.16-rc1 since TDX base
support has been merged. The QEMU repo is available at
QEMU: https://github.com/intel-staging/qemu-tdx/tree/tdx-upstream-snapshot-2025-06-12-v2

To facilitate shared device assignment with the NIC, employ the legacy
type1 VFIO with the QEMU command:

qemu-system-x86_64 [...]
    -device vfio-pci,host=XX:XX.X

The parameter of dma_entry_limit needs to be adjusted. For example, a
16GB guest needs to adjust the parameter like
vfio_iommu_type1.dma_entry_limit=4194304.

If use the iommufd-backed VFIO with the qemu command:

qemu-system-x86_64 [...]
    -object iommufd,id=iommufd0 \
    -device vfio-pci,host=XX:XX.X,iommufd=iommufd0

Related link
============
[1] https://lore.kernel.org/qemu-devel/20250530083256.105186-1-chenyi.qiang@intel.com/
[2] https://lore.kernel.org/qemu-devel/20240423150951.41600-54-pbonzini@redhat.com/
[3] https://lore.kernel.org/linux-iommu/0-v2-5c26bde5c22d+58b-iommu_pt_jgg@nvidia.com/
[4] https://lore.kernel.org/qemu-devel/d1a71e00-243b-4751-ab73-c05a4e090d58@redhat.com/
[5] https://lore.kernel.org/qemu-devel/013b36a9-9310-4073-b54c-9c511f23decf@linux.intel.com/

Chenyi Qiang (5):
  memory: Export a helper to get intersection of a MemoryRegionSection
    with a given range
  memory: Change memory_region_set_ram_discard_manager() to return the
    result
  memory: Unify the definiton of ReplayRamPopulate() and
    ReplayRamDiscard()
  ram-block-attributes: Introduce RamBlockAttributes to manage RAMBlock
    with guest_memfd
  physmem: Support coordinated discarding of RAM with guest_memfd

 MAINTAINERS                   |   1 +
 accel/kvm/kvm-all.c           |   9 +
 hw/virtio/virtio-mem.c        |  83 +++----
 include/system/memory.h       | 100 ++++++--
 include/system/ramblock.h     |  22 ++
 migration/ram.c               |   5 +-
 system/memory.c               |  22 +-
 system/meson.build            |   1 +
 system/physmem.c              |  23 +-
 system/ram-block-attributes.c | 442 ++++++++++++++++++++++++++++++++++
 system/trace-events           |   3 +
 11 files changed, 627 insertions(+), 84 deletions(-)

----------------------------------------------------------------------

New:  More cleanups to MSR interception code
[PATCH 0/2] More cleanups to MSR interception code
Author: Chao Gao <chao.gao@intel.com>

Deduplicate MSR interception APIs and simplify the handling of IA32_XSS
MSR. This series builds upon Sean's MSR cleanups series [*]

[*]: https://lore.kernel.org/kvm/20250610225737.156318-1-seanjc@google.com/

Note that this series has been tested on Intel hardware only.

Chao Gao (2):
  KVM: x86: Deduplicate MSR interception enabling and disabling
  KVM: SVM: Simplify MSR interception logic for IA32_XSS MSR

 arch/x86/kvm/svm/sev.c |  8 +++-----
 arch/x86/kvm/svm/svm.c | 23 +++++++++--------------
 arch/x86/kvm/svm/svm.h | 10 +---------
 arch/x86/kvm/vmx/vmx.c | 25 +++++++++----------------
 arch/x86/kvm/vmx/vmx.h | 10 +---------
 5 files changed, 23 insertions(+), 53 deletions(-)

----------------------------------------------------------------------

New:  KVM: x86: Deduplicate MSR interception enabling and disabling
[PATCH 1/2] KVM: x86: Deduplicate MSR interception enabling and disabling
Author: Chao Gao <chao.gao@intel.com>

Extract a common function from MSR interception disabling logic and create
disabling and enabling functions based on it. This removes most of the
duplicated code for MSR interception disabling/enabling.

No functional change intended.

Signed-off-by: Chao Gao <chao.gao@intel.com>
---
 arch/x86/kvm/svm/svm.c | 23 +++++++++--------------
 arch/x86/kvm/svm/svm.h | 10 +---------
 arch/x86/kvm/vmx/vmx.c | 25 +++++++++----------------
 arch/x86/kvm/vmx/vmx.h | 10 +---------
 4 files changed, 20 insertions(+), 48 deletions(-)

----------------------------------------------------------------------

New:  KVM: x86/mmu: Reject direct bits in gpa passed to KVM_PRE_FAULT_MEMORY
[PATCH] KVM: x86/mmu: Reject direct bits in gpa passed to KVM_PRE_FAULT_MEMORY
Author: Paolo Bonzini <pbonzini@redhat.com>

Only let userspace pass the same addresses that were used in KVM_SET_USER_MEMORY_REGION
(or KVM_SET_USER_MEMORY_REGION2); gpas in the the upper half of the address space
are an implementation detail of TDX and KVM.

Extracted from a patch by Sean Christopherson <seanjc@google.com>.

Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>
---
 arch/x86/kvm/mmu/mmu.c | 3 +++
 1 file changed, 3 insertions(+)

----------------------------------------------------------------------

New:  arm64/debug: Drop redundant DBG_MDSCR_* macros
[PATCH V4 1/2] arm64/debug: Drop redundant DBG_MDSCR_* macros
Author: Anshuman Khandual <anshuman.khandual@arm.com>

MDSCR_EL1 has already been defined in tools sysreg format and hence can be
used in all debug monitor related call paths. But using generated sysreg
definitions causes build warnings because there is a mismatch between mdscr
variable (u32) and GENMASK() based masks (long unsigned int). Convert all
variables handling MDSCR_EL1 register as u64 which also reflects its true
width as well.

--------------------------------------------------------------------------
arch/arm64/kernel/debug-monitors.c: In function ‘disable_debug_monitors’:
arch/arm64/kernel/debug-monitors.c:108:13: warning: conversion from ‘long
unsigned int’ to ‘u32’ {aka ‘unsigned int’} changes value from
‘18446744073709518847’ to ‘4294934527’ [-Woverflow]
  108 |   disable = ~MDSCR_EL1_MDE;
      |             ^
--------------------------------------------------------------------------

Cc: Catalin Marinas <catalin.marinas@arm.com>
Cc: Will Deacon <will@kernel.org>
Cc: Mark Rutland <mark.rutland@arm.com>
Cc: linux-arm-kernel@lists.infradead.org
Cc: linux-kernel@vger.kernel.org
Reviewed-by: Ada Couprie Diaz <ada.coupriediaz@arm.com>
Signed-off-by: Anshuman Khandual <anshuman.khandual@arm.com>
---
 arch/arm64/include/asm/assembler.h      |  4 ++--
 arch/arm64/include/asm/debug-monitors.h |  6 ------
 arch/arm64/kernel/debug-monitors.c      | 22 +++++++++++-----------
 arch/arm64/kernel/entry-common.c        |  4 ++--
 4 files changed, 15 insertions(+), 21 deletions(-)

----------------------------------------------------------------------

New:  arm64/debug: Drop redundant DBG_MDSCR_* macros
[PATCH V4 0/2] arm64/debug: Drop redundant DBG_MDSCR_* macros
Author: Anshuman Khandual <anshuman.khandual@arm.com>

MDSCR_EL1 has already been defined in tools sysreg format and hence can be
used in all debug monitor related call paths. Subsequently all DBG_MDSCR_*
macros become redundant and hence can be dropped off completely. While here
convert all variables handling MDSCR_EL1 register as u64 which reflects its
true width as well.

This series applies on v6.16-rc1

Changes in V4:

- Updated the commit message in [PATCH 1/2] explainig rationale for changing
  mdscr variable as u64 per Mark

Changes in V3:

https://lore.kernel.org/all/20250610053128.4118784-1-anshuman.khandual@arm.com/

- Split out the self test changes into a separate patch per Mark
- Added RB tag from Ada

Changes in V2:

https://lore.kernel.org/all/20250508044752.234543-1-anshuman.khandual@arm.com/

- Changed reg, val width to u64 in cortex_a76_erratum_1463225_svc_handler() per Ada
- Changed mdscr register width to uint64_t in enable_monitor_debug_exceptions() and
  install_ss() per Ada
    
Changes in V1:

https://lore.kernel.org/all/20250417105253.3188976-1-anshuman.khandual@arm.com/

Cc: Catalin Marinas <catalin.marinas@arm.com>
Cc: Will Deacon <will@kernel.org>
Cc: Mark Rutland <mark.rutland@arm.com>
Cc: Ada Couprie Diaz <ada.coupriediaz@arm.com>
Cc: Marc Zyngier <maz@kernel.org>
Cc: Oliver Upton <oliver.upton@linux.dev>
Cc: Joey Gouly <joey.gouly@arm.com>
Cc: linux-arm-kernel@lists.infradead.org
Cc: linux-kernel@vger.kernel.org
Cc: kvmarm@lists.linux.dev
Cc: kvm@vger.kernel.org

Anshuman Khandual (2):
  arm64/debug: Drop redundant DBG_MDSCR_* macros
  KVM: selftests: Change MDSCR_EL1 register holding variables as uint64_t

 arch/arm64/include/asm/assembler.h            |  4 ++--
 arch/arm64/include/asm/debug-monitors.h       |  6 -----
 arch/arm64/kernel/debug-monitors.c            | 22 +++++++++----------
 arch/arm64/kernel/entry-common.c              |  4 ++--
 .../selftests/kvm/arm64/debug-exceptions.c    |  4 ++--
 5 files changed, 17 insertions(+), 23 deletions(-)

----------------------------------------------------------------------

New:  KVM: arm64: Explicitly treat routing entry type
[PATCH v3 01/62] KVM: arm64: Explicitly treat routing entry type
Author: Sean Christopherson <seanjc@google.com>

Explicitly treat type differences as GSI routing changes, as comparing MSI
data between two entries could get a false negative, e.g. if userspace
changed the type but left the type-specific data as-

Note, the same bug was fixed in x86 by commit bcda70c56f3e ("KVM: x86:
Explicitly treat routing entry type changes as changes").

Fixes: 4bf3693d36af ("KVM: arm64: Unmap vLPIs affected by changes to GSI routing information")
Signed-off-by: Sean Christopherson <seanjc@google.com>
---
 arch/arm64/kvm/arm.c | 3 ++-
 1 file changed, 2 insertions(+), 1 deletion(-)

----------------------------------------------------------------------

New:  KVM: iommu: Overhaul device posted IRQs support
[PATCH v3 00/62] KVM: iommu: Overhaul device posted IRQs support
Author: Sean Christopherson <seanjc@google.com>

Marc/Oliver,

Patch 1 is an arm64 fix that I'm guessing you'll want to grab for 6.16.
Assuming that's the case, I'll make sure this series lands on top of
kvm/master (or maybe an -rc?) at the appropriate point in time.  Though if you
can grab the patch sooner than later, that'd be super helpful :-)

Oh, and the other patches are of interest to arm64 are:

  [PATCH v3 32/62] KVM: Don't WARN if updating IRQ bypass route fails
  [PATCH v3 33/62] KVM: Fold kvm_arch_irqfd_route_changed() into kvm_arch_update_irqfd_routing()

In theory, I _think_ those could be moved earlier so that there aren't
multi-arch patches buried in a massive x86-centric series, but I really don't
want to try and re-disentangle x86's posted interrupt mess at this point.


TL;DR: Overhaul device posted interrupts in KVM and IOMMU, and AVIC in
       general.

This applies on the series to add CONFIG_KVM_IOAPIC (and to kill irq_comm.c):

  https://lore.kernel.org/all/20250611213557.294358-1-seanjc@google.com

Fix a variety of bugs related to device posted IRQs, especially on the
AMD side, and clean up KVM's implementation (this series actually removes
more code than it adds).

Batch #1 is new in this version, and consists of two aforementioned arm64
changes.

Batch #2 is mostly SVM specific:

 - Cleans up various warts and bugs in the IRTE tracking
 - Fixes AVIC to not reject large VMs (honor KVM's ABI)
 - Wire up AVIC to enable_ipiv to support disabling IPI virtualization while
   still utilizing device posted interrupts, and to workaround erratum #1235.

Batch #3 overhauls the guts of IRQ bypass in KVM, and moves the vast majority
of the logic to common x86; only the code that needs to communicate with the
IOMMU is truly vendor specific.

Batch #4 is more SVM/AVIC cleanups that are made possible by batch #3.

Batch #5 adds WARNs and drops dead code after all the previous cleanups and
fixes (I don't want to add the WARNs earlier; I don't see any point in adding
WARNs in code that's known to be broken).

Batch #6 is yet more SVM/AVIC cleanups, with the specific goal of configuring
IRTEs to generate GA log interrupts if and only if KVM actually needs a wake
event.

v3:
 - Rebase on kvm/next to pick up relevant arm64 irqfd routing changes, and
   account for arm64 as appropriate.
 - Fix a suspiciously similar bug in arm64's version of
   kvm_arch_irqfd_route_changed().
 - Add a patch to rename kvm_set_msi_irq() to kvm_msi_to_lapic_irq().

v2:
 - https://lore.kernel.org/all/20250523010004.3240643-1-seanjc@google.com
 - Drop patches that were already merged.
 - Move code into irq.c, not x86.c. [Paolo]
 - Collect review/testing tags. [Sairaj, Vasant]
 - Sqaush fixup for a comment that was added in the prior patch. [Sairaj]
 - Rewrote the changelog for "Delete IRTE link from previous vCPU irrespective
   of new routing". [Sairaj]
 - Actually drop "struct amd_svm_iommu_ir" and all usage in "Track per-vCPU
   IRTEs using kvm_kernel_irqfd structure" (the previous version was getting
   hilarious lucky with struct offsets). [Sairaj]
 - Drop unused params from kvm_pi_update_irte() and pi_update_irte(). [Sairaj]
 - Document the rules and behavior of amd_iommu_update_ga(). [Joerg]
 - Fix a changelog typo. [Paolo]
 - Document that GALogIntr isn't cached, i.e. can be safely updated without
   an invalidation. [Joao, Vasant]
 - Rework avic_vcpu_{load,put}() to use an enumerated parameter instead of a
   series of booleans. [Paolo]
 - Drop a redundant "&& new". [Francesco]
 - Drop the *** DO NOT MERGE *** testing hack patches.

v1: https://lore.kernel.org/all/20250404193923.1413163-1-seanjc@google.com

Maxim Levitsky (2):
  KVM: SVM: Add enable_ipiv param, never set IsRunning if disabled
  KVM: SVM: Disable (x2)AVIC IPI virtualization if CPU has erratum #1235

Sean Christopherson (60):
  KVM: arm64: Explicitly treat routing entry type changes as changes
  KVM: arm64: WARN if unmapping vLPI fails
  KVM: Pass new routing entries and irqfd when updating IRTEs
  KVM: SVM: Track per-vCPU IRTEs using kvm_kernel_irqfd structure
  KVM: SVM: Delete IRTE link from previous vCPU before setting new IRTE
  iommu/amd: KVM: SVM: Delete now-unused cached/previous GA tag fields
  KVM: SVM: Delete IRTE link from previous vCPU irrespective of new
    routing
  KVM: SVM: Drop pointless masking of default APIC base when setting
    V_APIC_BAR
  KVM: SVM: Drop pointless masking of kernel page pa's with AVIC HPA
    masks
  KVM: SVM: Add helper to deduplicate code for getting AVIC backing page
  KVM: SVM: Drop vcpu_svm's pointless avic_backing_page field
  KVM: SVM: Inhibit AVIC if ID is too big instead of rejecting vCPU
    creation
  KVM: SVM: Drop redundant check in AVIC code on ID during vCPU creation
  KVM: SVM: Track AVIC tables as natively sized pointers, not "struct
    pages"
  KVM: SVM: Drop superfluous "cache" of AVIC Physical ID entry pointer
  KVM: VMX: Move enable_ipiv knob to common x86
  KVM: VMX: Suppress PI notifications whenever the vCPU is put
  KVM: SVM: Add a comment to explain why avic_vcpu_blocking() ignores
    IRQ blocking
  iommu/amd: KVM: SVM: Use pi_desc_addr to derive ga_root_ptr
  iommu/amd: KVM: SVM: Pass NULL @vcpu_info to indicate "not guest mode"
  KVM: SVM: Stop walking list of routing table entries when updating
    IRTE
  KVM: VMX: Stop walking list of routing table entries when updating
    IRTE
  KVM: SVM: Extract SVM specific code out of get_pi_vcpu_info()
  KVM: x86: Move IRQ routing/delivery APIs from x86.c => irq.c
  KVM: x86: Nullify irqfd->producer after updating IRTEs
  KVM: x86: Dedup AVIC vs. PI code for identifying target vCPU
  KVM: x86: Move posted interrupt tracepoint to common code
  KVM: SVM: Clean up return handling in avic_pi_update_irte()
  iommu: KVM: Split "struct vcpu_data" into separate AMD vs. Intel
    structs
  KVM: Don't WARN if updating IRQ bypass route fails
  KVM: Fold kvm_arch_irqfd_route_changed() into
    kvm_arch_update_irqfd_routing()
  KVM: x86: Track irq_bypass_vcpu in common x86 code
  KVM: x86: Skip IOMMU IRTE updates if there's no old or new vCPU being
    targeted
  KVM: x86: Don't update IRTE entries when old and new routes were !MSI
  KVM: SVM: Revert IRTE to legacy mode if IOMMU doesn't provide IR
    metadata
  KVM: SVM: Take and hold ir_list_lock across IRTE updates in IOMMU
  iommu/amd: Document which IRTE fields amd_iommu_update_ga() can modify
  iommu/amd: KVM: SVM: Infer IsRun from validity of pCPU destination
  iommu/amd: Factor out helper for manipulating IRTE GA/CPU info
  iommu/amd: KVM: SVM: Set pCPU info in IRTE when setting vCPU affinity
  iommu/amd: KVM: SVM: Add IRTE metadata to affined vCPU's list if AVIC
    is inhibited
  KVM: SVM: Don't check for assigned device(s) when updating affinity
  KVM: SVM: Don't check for assigned device(s) when activating AVIC
  KVM: SVM: WARN if (de)activating guest mode in IOMMU fails
  KVM: SVM: Process all IRTEs on affinity change even if one update
    fails
  KVM: SVM: WARN if updating IRTE GA fields in IOMMU fails
  KVM: x86: Drop superfluous "has assigned device" check in
    kvm_pi_update_irte()
  KVM: x86: WARN if IRQ bypass isn't supported in kvm_pi_update_irte()
  KVM: x86: WARN if IRQ bypass routing is updated without in-kernel
    local APIC
  KVM: SVM: WARN if ir_list is non-empty at vCPU free
  KVM: x86: Decouple device assignment from IRQ bypass
  KVM: VMX: WARN if VT-d Posted IRQs aren't possible when starting IRQ
    bypass
  KVM: SVM: Use vcpu_idx, not vcpu_id, for GA log tag/metadata
  iommu/amd: WARN if KVM calls GA IRTE helpers without virtual APIC
    support
  KVM: SVM: Fold avic_set_pi_irte_mode() into its sole caller
  KVM: SVM: Don't check vCPU's blocking status when toggling AVIC on/off
  KVM: SVM: Consolidate IRTE update when toggling AVIC on/off
  iommu/amd: KVM: SVM: Allow KVM to control need for GA log interrupts
  KVM: SVM: Generate GA log IRQs only if the associated vCPUs is
    blocking
  KVM: x86: Rename kvm_set_msi_irq() => kvm_msi_to_lapic_irq()

 arch/arm64/kvm/arm.c                 |  19 +-
 arch/arm64/kvm/vgic/vgic-v4.c        |  10 +-
 arch/x86/include/asm/irq_remapping.h |  17 +-
 arch/x86/include/asm/kvm-x86-ops.h   |   2 +-
 arch/x86/include/asm/kvm_host.h      |  23 +-
 arch/x86/include/asm/svm.h           |  13 +-
 arch/x86/kvm/irq.c                   | 152 +++++-
 arch/x86/kvm/svm/avic.c              | 702 ++++++++++++---------------
 arch/x86/kvm/svm/svm.c               |   4 +
 arch/x86/kvm/svm/svm.h               |  32 +-
 arch/x86/kvm/trace.h                 |  19 +-
 arch/x86/kvm/vmx/capabilities.h      |   1 -
 arch/x86/kvm/vmx/main.c              |   2 +-
 arch/x86/kvm/vmx/posted_intr.c       | 140 ++----
 arch/x86/kvm/vmx/posted_intr.h       |  10 +-
 arch/x86/kvm/vmx/vmx.c               |   2 -
 arch/x86/kvm/x86.c                   |  90 +---
 drivers/iommu/amd/amd_iommu_types.h  |   1 -
 drivers/iommu/amd/iommu.c            | 125 +++--
 drivers/iommu/intel/irq_remapping.c  |  10 +-
 include/kvm/arm_vgic.h               |   2 +-
 include/linux/amd-iommu.h            |  25 +-
 include/linux/kvm_host.h             |   9 +-
 include/linux/kvm_irqfd.h            |   4 +
 virt/kvm/eventfd.c                   |  22 +-
 25 files changed, 691 insertions(+), 745 deletions(-)

----------------------------------------------------------------------

