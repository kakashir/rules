From b9b7522f to ce53743f
KVM mailing list update from b9b7522f to ce53743f

Top 15 contributor Email domains (Based on Email Body)

      3 intel.com

Top 15 contributors (Based on Email Body)

      3  Adrian Hunter <adrian.hunter@intel.com>

===== Patch list in this time period =====


===== Patch Commit Messages ====

New:  KVM: x86: Do not use kvm_rip_read() unconditionally in KVM tracepoints
[PATCH 1/2] KVM: x86: Do not use kvm_rip_read() unconditionally in KVM tracepoints
Author: Adrian Hunter <adrian.hunter@intel.com>

Not all VMs allow access to RIP.  Check guest_state_protected before
calling kvm_rip_read().

This avoids, for example, hitting WARN_ON_ONCE in vt_cache_reg() for
TDX VMs.

Fixes: 81bf912b2c15 ("KVM: TDX: Implement TDX vcpu enter/exit path")
Signed-off-by: Adrian Hunter <adrian.hunter@intel.com>
---
 arch/x86/kvm/trace.h | 13 ++++++++++---
 1 file changed, 10 insertions(+), 3 deletions(-)

----------------------------------------------------------------------

New:  KVM: x86: Correct use of kvm_rip_read()
[PATCH 0/2] KVM: x86: Correct use of kvm_rip_read()
Author: Adrian Hunter <adrian.hunter@intel.com>

Hi

Here are a couple of tweaks to dodge kvm_rip_read() in tracepoints and
KVM_PROFILING when guest_state_protected.

This avoids, for example, hitting WARN_ON_ONCE in vt_cache_reg() for
TDX VMs.


Adrian Hunter (2):
      KVM: x86: Do not use kvm_rip_read() unconditionally in KVM tracepoints
      KVM: x86: Do not use kvm_rip_read() unconditionally for KVM_PROFILING

 arch/x86/kvm/trace.h | 13 ++++++++++---
 arch/x86/kvm/x86.c   |  3 ++-
 2 files changed, 12 insertions(+), 4 deletions(-)

----------------------------------------------------------------------

