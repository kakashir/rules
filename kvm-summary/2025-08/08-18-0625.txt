From 686659896 to 2e5618501
KVM mailing list update from 686659896 to 2e5618501

Top 15 contributor Email domains (Based on Email Body)

     12 kernel.org
      7 ventanamicro.com

Top 15 contributors (Based on Email Body)

     12  Marc Zyngier <maz@kernel.org>
      7  Anup Patel <apatel@ventanamicro.com>

===== Patch list in this time period =====


===== Patch Commit Messages ====

New:  KVM: arm64: FEAT_RASv1p1 support and RAS selection
[PATCH v3 0/6] KVM: arm64: FEAT_RASv1p1 support and RAS selection
Author: Marc Zyngier <maz@kernel.org>

This is the next iteration of this series trying to plug some of our
RAS holes (no pun intended...). See [1] for the original series.

The difference with the previous drop is that we don't try to expose a
canonical encoding RASv1p1. Which means you must migrate between
similar implementations for now.

I've also added a cleanup patch at the end, which can be dropped.

Patches on top of v6.17-rc1.

* From v2 [2]:

  - Drop the canonical RASv1p1 advertisement

  - Expose ID_AA64PFR1_EL1.RAS_frac as a writable field

  - Added an extra patch dropping ARM64_FEATURE_MASK(), as it is both
    useless and annoying

  - Pick RB from Joey (thanks!)

* From v1 [1]:

  - Bunch of patches picked by Oliver (thanks!)

  - Added missing SYS_ERXMISC{2,3}_EL1 from the list of handled RAS
    registers

  - Added some rationale about the advertising of RASv1p1 (Cornelia)

  - Picked AB from Catalin (thanks!)

[1] https://lore.kernel.org/kvmarm/20250721101955.535159-1-maz@kernel.org
[2] https://lore.kernel.org/kvmarm/20250806165615.1513164-1-maz@kernel.org

Marc Zyngier (6):
  arm64: Add capability denoting FEAT_RASv1p1
  KVM: arm64: Handle RASv1p1 registers
  KVM: arm64: Ignore HCR_EL2.FIEN set by L1 guest's EL2
  KVM: arm64: Make ID_AA64PFR0_EL1.RAS writable
  KVM: arm64: Make ID_AA64PFR1_EL1.RAS_frac writable
  KVM: arm64: Get rid of ARM64_FEATURE_MASK()

 arch/arm64/include/asm/sysreg.h               |  3 -
 arch/arm64/kernel/cpufeature.c                | 24 ++++++
 arch/arm64/kvm/arm.c                          |  8 +-
 arch/arm64/kvm/hyp/vhe/switch.c               |  5 +-
 arch/arm64/kvm/nested.c                       |  3 +-
 arch/arm64/kvm/sys_regs.c                     | 75 +++++++++++++------
 arch/arm64/tools/cpucaps                      |  1 +
 tools/arch/arm64/include/asm/sysreg.h         |  3 -
 .../selftests/kvm/arm64/aarch32_id_regs.c     |  2 +-
 .../selftests/kvm/arm64/debug-exceptions.c    | 12 +--
 .../testing/selftests/kvm/arm64/no-vgic-v3.c  |  4 +-
 .../selftests/kvm/arm64/page_fault_test.c     |  6 +-
 .../testing/selftests/kvm/arm64/set_id_regs.c |  8 +-
 .../selftests/kvm/arm64/vpmu_counter_access.c |  2 +-
 .../selftests/kvm/lib/arm64/processor.c       |  6 +-
 15 files changed, 107 insertions(+), 55 deletions(-)

----------------------------------------------------------------------

New:  arm64: Add capability denoting FEAT_RASv1p1
[PATCH v3 1/6] arm64: Add capability denoting FEAT_RASv1p1
Author: Marc Zyngier <maz@kernel.org>

Detecting FEAT_RASv1p1 is rather complicated, as there are two
ways for the architecture to advertise the same thing (always a
delight...).

Add a capability that will advertise this in a synthetic way to
the rest of the kernel.

Acked-by: Catalin Marinas <catalin.marinas@arm.com>
Signed-off-by: Marc Zyngier <maz@kernel.org>
---
 arch/arm64/kernel/cpufeature.c | 24 ++++++++++++++++++++++++
 arch/arm64/tools/cpucaps       |  1 +
 2 files changed, 25 insertions(+)

----------------------------------------------------------------------

New:  RISC-V: KVM: Set initial value of hedeleg in kvm_arch_vcpu_create()
[PATCH v2 1/6] RISC-V: KVM: Set initial value of hedeleg in kvm_arch_vcpu_create()
Author: Anup Patel <apatel@ventanamicro.com>

The hedeleg may be updated by ONE_REG interface before the VCPU
is run at least once hence set the initial value of hedeleg in
kvm_arch_vcpu_create() instead of kvm_riscv_vcpu_setup_config().

Signed-off-by: Anup Patel <apatel@ventanamicro.com>
Reviewed-by: Andrew Jones <ajones@ventanamicro.com>
---
 arch/riscv/kvm/vcpu.c | 3 ++-
 1 file changed, 2 insertions(+), 1 deletion(-)

----------------------------------------------------------------------

New:  ONE_REG interface for SBI FWFT extension
[PATCH v2 0/6] ONE_REG interface for SBI FWFT extension
Author: Anup Patel <apatel@ventanamicro.com>

This series adds ONE_REG interface for SBI FWFT extension implemented
by KVM RISC-V. This was missed out in accepted SBI FWFT patches for
KVM RISC-V.

These patches can also be found in the riscv_kvm_fwft_one_reg_v2 branch
at: https://github.com/avpatel/linux.git

Changes since v1:
 - Dropped have_state in PATCH4 as suggested by Drew
 - Added Drew's Reviewed-by in appropriate patches

Anup Patel (6):
  RISC-V: KVM: Set initial value of hedeleg in kvm_arch_vcpu_create()
  RISC-V: KVM: Introduce feature specific reset for SBI FWFT
  RISC-V: KVM: Introduce optional ONE_REG callbacks for SBI extensions
  RISC-V: KVM: Move copy_sbi_ext_reg_indices() to SBI implementation
  RISC-V: KVM: Implement ONE_REG interface for SBI FWFT state
  KVM: riscv: selftests: Add SBI FWFT to get-reg-list test

 arch/riscv/include/asm/kvm_vcpu_sbi.h         |  22 +-
 arch/riscv/include/uapi/asm/kvm.h             |  14 ++
 arch/riscv/kvm/vcpu.c                         |   3 +-
 arch/riscv/kvm/vcpu_onereg.c                  |  60 +-----
 arch/riscv/kvm/vcpu_sbi.c                     | 172 ++++++++++++---
 arch/riscv/kvm/vcpu_sbi_fwft.c                | 198 ++++++++++++++++--
 arch/riscv/kvm/vcpu_sbi_sta.c                 |  63 ++++--
 .../selftests/kvm/riscv/get-reg-list.c        |  28 +++
 8 files changed, 433 insertions(+), 127 deletions(-)

----------------------------------------------------------------------

New:  KVM: arm64: Live system register access fixes
[PATCH v2 0/4] KVM: arm64: Live system register access fixes
Author: Marc Zyngier <maz@kernel.org>

This series stems from [1], which outlined some rather bad bugs in the
way we handle live system registers with VHE. As the discussion
progressed, I decided to tighten things a bit, and found a couple more
bugs in the process.

I appreciate this is a bit big for a -rc, but at the same time some of
the issues are rather annoying, and I'd like to make sure we address
these for good.

[1] https://lore.kernel.org/all/20250809144811.2314038-3-maz@kernel.org/

Marc Zyngier (4):
  KVM: arm64: Check for SYSREGS_ON_CPU before accessing the 32bit state
  KVM: arm64: Simplify sysreg access on exception delivery
  KVM: arm64: Fix vcpu_{read,write}_sys_reg() accessors
  KVM: arm64: Remove __vcpu_{read,write}_sys_reg_{from,to}_cpu()

 arch/arm64/include/asm/kvm_host.h | 111 +---------
 arch/arm64/kvm/hyp/exception.c    |  20 +-
 arch/arm64/kvm/sys_regs.c         | 344 ++++++++++++++++++++----------
 3 files changed, 243 insertions(+), 232 deletions(-)

----------------------------------------------------------------------

New:  KVM: arm64: Check for SYSREGS_ON_CPU before accessing the 32bit state
[PATCH v2 1/4] KVM: arm64: Check for SYSREGS_ON_CPU before accessing the 32bit state
Author: Marc Zyngier <maz@kernel.org>

Just like c6e35dff58d3 ("KVM: arm64: Check for SYSREGS_ON_CPU before
accessing the CPU state") fixed the 64bit state access, add a check
for the 32bit state actually being on the CPU before writing it.

Signed-off-by: Marc Zyngier <maz@kernel.org>
---
 arch/arm64/kvm/hyp/exception.c | 4 ++--
 1 file changed, 2 insertions(+), 2 deletions(-)

----------------------------------------------------------------------

