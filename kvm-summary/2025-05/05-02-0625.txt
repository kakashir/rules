From 13c37d0b to dc925430
KVM mailing list update from 13c37d0b to dc925430

Top 15 contributor Email domains (Based on Email Body)

     34 linaro.org
     12 google.com
      4 rbox.co
      1 zytor.com
      1 nutanix.com
      1 lst.de

Top 15 contributors (Based on Email Body)

     33  Pierrick Bouvier <pierrick.bouvier@linaro.org>
     12  David Matlack <dmatlack@google.com>
      4  Michal Luczaj <mhal@rbox.co>
      1  "Xin Li (Intel)" <xin@zytor.com>
      1  Philippe Mathieu-Daud√© <philmd@linaro.org>
      1  Jon Kohler <jon@nutanix.com>
      1  Christoph Hellwig <hch@lst.de>

===== Patch list in this time period =====


===== Patch Commit Messages ====

New:  KVM: selftests: Use gva_t instead of vm_vaddr_t
[PATCH 01/10] KVM: selftests: Use gva_t instead of vm_vaddr_t
Author: David Matlack <dmatlack@google.com>

Replace all occurrences of vm_vaddr_t with gva_t to align with KVM code
and with the conversion helpers (e.g. addr_gva2hva()). Also replace
vm_vaddr in function names with gva to align with the new type name.

This commit was generated with the following command:

  git ls-files tools/testing/selftests/kvm | \
          xargs sed -i 's/vm_vaddr_/gva_/g'

Then by manually adjusting whitespace to make checkpatch.pl happy.

No functional change intended.

Signed-off-by: David Matlack <dmatlack@google.com>
---
 tools/testing/selftests/kvm/arm64/vgic_irq.c  |  6 +--
 .../selftests/kvm/include/arm64/processor.h   |  2 +-
 .../selftests/kvm/include/arm64/ucall.h       |  4 +-
 .../testing/selftests/kvm/include/kvm_util.h  | 36 ++++++-------
 .../selftests/kvm/include/kvm_util_types.h    |  2 +-
 .../selftests/kvm/include/riscv/ucall.h       |  2 +-
 .../selftests/kvm/include/s390/ucall.h        |  2 +-
 .../selftests/kvm/include/ucall_common.h      |  4 +-
 .../selftests/kvm/include/x86/hyperv.h        | 10 ++--
 .../selftests/kvm/include/x86/kvm_util_arch.h |  6 +--
 .../selftests/kvm/include/x86/svm_util.h      |  2 +-
 tools/testing/selftests/kvm/include/x86/vmx.h |  2 +-
 .../selftests/kvm/kvm_page_table_test.c       |  2 +-
 .../selftests/kvm/lib/arm64/processor.c       | 28 +++++-----
 tools/testing/selftests/kvm/lib/arm64/ucall.c |  6 +--
 tools/testing/selftests/kvm/lib/elf.c         |  6 +--
 tools/testing/selftests/kvm/lib/kvm_util.c    | 51 +++++++++----------
 .../selftests/kvm/lib/riscv/processor.c       | 16 +++---
 .../selftests/kvm/lib/s390/processor.c        |  8 +--
 .../testing/selftests/kvm/lib/ucall_common.c  | 12 ++---
 tools/testing/selftests/kvm/lib/x86/hyperv.c  | 10 ++--
 .../testing/selftests/kvm/lib/x86/memstress.c |  2 +-
 .../testing/selftests/kvm/lib/x86/processor.c | 30 +++++------
 tools/testing/selftests/kvm/lib/x86/svm.c     | 10 ++--
 tools/testing/selftests/kvm/lib/x86/ucall.c   |  2 +-
 tools/testing/selftests/kvm/lib/x86/vmx.c     | 20 ++++----
 .../selftests/kvm/riscv/sbi_pmu_test.c        |  2 +-
 tools/testing/selftests/kvm/s390/memop.c      | 18 +++----
 tools/testing/selftests/kvm/s390/tprot.c      | 10 ++--
 tools/testing/selftests/kvm/steal_time.c      |  2 +-
 tools/testing/selftests/kvm/x86/amx_test.c    |  8 +--
 tools/testing/selftests/kvm/x86/cpuid_test.c  |  6 +--
 .../testing/selftests/kvm/x86/hyperv_clock.c  |  4 +-
 .../testing/selftests/kvm/x86/hyperv_evmcs.c  |  8 +--
 .../kvm/x86/hyperv_extended_hypercalls.c      | 10 ++--
 .../selftests/kvm/x86/hyperv_features.c       | 12 ++---
 tools/testing/selftests/kvm/x86/hyperv_ipi.c  | 10 ++--
 .../selftests/kvm/x86/hyperv_svm_test.c       |  8 +--
 .../selftests/kvm/x86/hyperv_tlb_flush.c      | 20 ++++----
 .../selftests/kvm/x86/kvm_clock_test.c        |  4 +-
 .../selftests/kvm/x86/nested_emulation_test.c |  2 +-
 .../kvm/x86/nested_exceptions_test.c          |  2 +-
 .../selftests/kvm/x86/sev_smoke_test.c        |  6 +--
 tools/testing/selftests/kvm/x86/smm_test.c    |  2 +-
 tools/testing/selftests/kvm/x86/state_test.c  |  2 +-
 .../selftests/kvm/x86/svm_int_ctl_test.c      |  2 +-
 .../kvm/x86/svm_nested_shutdown_test.c        |  2 +-
 .../kvm/x86/svm_nested_soft_inject_test.c     |  6 +--
 .../selftests/kvm/x86/svm_vmcall_test.c       |  2 +-
 .../kvm/x86/triple_fault_event_test.c         |  4 +-
 .../selftests/kvm/x86/vmx_apic_access_test.c  |  2 +-
 .../kvm/x86/vmx_close_while_nested_test.c     |  2 +-
 .../selftests/kvm/x86/vmx_dirty_log_test.c    |  2 +-
 .../kvm/x86/vmx_invalid_nested_guest_state.c  |  2 +-
 .../kvm/x86/vmx_nested_tsc_scaling_test.c     |  2 +-
 .../kvm/x86/vmx_preemption_timer_test.c       |  2 +-
 .../selftests/kvm/x86/vmx_tsc_adjust_test.c   |  2 +-
 .../selftests/kvm/x86/xapic_ipi_test.c        |  4 +-
 58 files changed, 225 insertions(+), 226 deletions(-)

----------------------------------------------------------------------

New:  KVM: selftests: Convert to kernel-style types
[PATCH 00/10] KVM: selftests: Convert to kernel-style types
Author: David Matlack <dmatlack@google.com>

This series renames types across all KVM selftests to more align with
types used in the kernel:

  vm_vaddr_t -> gva_t
  vm_paddr_t -> gpa_t

  uint64_t -> u64
  uint32_t -> u32
  uint16_t -> u16
  uint8_t  -> u8

  int64_t -> s64
  int32_t -> s32
  int16_t -> s16
  int8_t  -> s8

The goal of this series is to make the KVM selftests code more concise
(the new type names are shorter) and more similar to the kernel, since
selftests are developed by kernel developers.

I know broad changes like this series can be difficult to merge and also
muddies up the git-blame history, so if there isn't appetite for this we
can drop it. But if there is I would be happy to help with rebasing and
resolving merge conflicts to get it in.

Most of the commits in this series are auto-generated with a single
command (see commit messages), aside from whitespace fixes, so rebasing
onto a different base isn't terrible.

David Matlack (10):
  KVM: selftests: Use gva_t instead of vm_vaddr_t
  KVM: selftests: Use gpa_t instead of vm_paddr_t
  KVM: selftests: Use gpa_t for GPAs in Hyper-V selftests
  KVM: selftests: Use u64 instead of uint64_t
  KVM: selftests: Use s64 instead of int64_t
  KVM: selftests: Use u32 instead of uint32_t
  KVM: selftests: Use s32 instead of int32_t
  KVM: selftests: Use u16 instead of uint16_t
  KVM: selftests: Use s16 instead of int16_t
  KVM: selftests: Use u8 instead of uint8_t

 .../selftests/kvm/access_tracking_perf_test.c |  40 +--
 tools/testing/selftests/kvm/arch_timer.c      |   6 +-
 .../selftests/kvm/arm64/aarch32_id_regs.c     |  14 +-
 .../testing/selftests/kvm/arm64/arch_timer.c  |   8 +-
 .../kvm/arm64/arch_timer_edge_cases.c         | 159 +++++----
 .../selftests/kvm/arm64/debug-exceptions.c    |  73 ++--
 .../testing/selftests/kvm/arm64/hypercalls.c  |  24 +-
 .../testing/selftests/kvm/arm64/no-vgic-v3.c  |   6 +-
 .../selftests/kvm/arm64/page_fault_test.c     |  82 ++---
 tools/testing/selftests/kvm/arm64/psci_test.c |  26 +-
 .../testing/selftests/kvm/arm64/set_id_regs.c |  58 ++--
 .../selftests/kvm/arm64/smccc_filter.c        |  10 +-
 tools/testing/selftests/kvm/arm64/vgic_init.c |  56 ++--
 tools/testing/selftests/kvm/arm64/vgic_irq.c  | 116 +++----
 .../selftests/kvm/arm64/vgic_lpi_stress.c     |  20 +-
 .../selftests/kvm/arm64/vpmu_counter_access.c |  62 ++--
 .../testing/selftests/kvm/coalesced_io_test.c |  38 +--
 .../selftests/kvm/demand_paging_test.c        |  10 +-
 .../selftests/kvm/dirty_log_perf_test.c       |  14 +-
 tools/testing/selftests/kvm/dirty_log_test.c  |  82 ++---
 tools/testing/selftests/kvm/get-reg-list.c    |   2 +-
 .../testing/selftests/kvm/guest_memfd_test.c  |   2 +-
 .../testing/selftests/kvm/guest_print_test.c  |  22 +-
 .../selftests/kvm/hardware_disable_test.c     |   6 +-
 .../selftests/kvm/include/arm64/arch_timer.h  |  30 +-
 .../selftests/kvm/include/arm64/delay.h       |   4 +-
 .../testing/selftests/kvm/include/arm64/gic.h |   8 +-
 .../selftests/kvm/include/arm64/gic_v3_its.h  |   8 +-
 .../selftests/kvm/include/arm64/processor.h   |  20 +-
 .../selftests/kvm/include/arm64/ucall.h       |   4 +-
 .../selftests/kvm/include/arm64/vgic.h        |  20 +-
 .../testing/selftests/kvm/include/kvm_util.h  | 311 +++++++++---------
 .../selftests/kvm/include/kvm_util_types.h    |   4 +-
 .../testing/selftests/kvm/include/memstress.h |  30 +-
 .../selftests/kvm/include/riscv/arch_timer.h  |  22 +-
 .../selftests/kvm/include/riscv/processor.h   |   9 +-
 .../selftests/kvm/include/riscv/ucall.h       |   4 +-
 .../kvm/include/s390/diag318_test_handler.h   |   2 +-
 .../selftests/kvm/include/s390/facility.h     |   4 +-
 .../selftests/kvm/include/s390/ucall.h        |   4 +-
 .../testing/selftests/kvm/include/sparsebit.h |   6 +-
 .../testing/selftests/kvm/include/test_util.h |  40 +--
 .../selftests/kvm/include/timer_test.h        |  18 +-
 .../selftests/kvm/include/ucall_common.h      |  22 +-
 .../selftests/kvm/include/userfaultfd_util.h  |   6 +-
 .../testing/selftests/kvm/include/x86/apic.h  |  22 +-
 .../testing/selftests/kvm/include/x86/evmcs.h |  22 +-
 .../selftests/kvm/include/x86/hyperv.h        |  28 +-
 .../selftests/kvm/include/x86/kvm_util_arch.h |  12 +-
 tools/testing/selftests/kvm/include/x86/pmu.h |   6 +-
 .../selftests/kvm/include/x86/processor.h     | 272 ++++++++-------
 tools/testing/selftests/kvm/include/x86/sev.h |  14 +-
 .../selftests/kvm/include/x86/svm_util.h      |  10 +-
 .../testing/selftests/kvm/include/x86/ucall.h |   2 +-
 tools/testing/selftests/kvm/include/x86/vmx.h |  80 ++---
 .../selftests/kvm/kvm_page_table_test.c       |  54 +--
 tools/testing/selftests/kvm/lib/arm64/gic.c   |   6 +-
 .../selftests/kvm/lib/arm64/gic_private.h     |  24 +-
 .../testing/selftests/kvm/lib/arm64/gic_v3.c  |  84 ++---
 .../selftests/kvm/lib/arm64/gic_v3_its.c      |  12 +-
 .../selftests/kvm/lib/arm64/processor.c       | 126 +++----
 tools/testing/selftests/kvm/lib/arm64/ucall.c |  12 +-
 tools/testing/selftests/kvm/lib/arm64/vgic.c  |  38 +--
 tools/testing/selftests/kvm/lib/elf.c         |   8 +-
 tools/testing/selftests/kvm/lib/guest_modes.c |   2 +-
 .../testing/selftests/kvm/lib/guest_sprintf.c |  18 +-
 tools/testing/selftests/kvm/lib/kvm_util.c    | 222 +++++++------
 tools/testing/selftests/kvm/lib/memstress.c   |  38 +--
 .../selftests/kvm/lib/riscv/processor.c       |  56 ++--
 .../kvm/lib/s390/diag318_test_handler.c       |  12 +-
 .../testing/selftests/kvm/lib/s390/facility.c |   2 +-
 .../selftests/kvm/lib/s390/processor.c        |  42 +--
 tools/testing/selftests/kvm/lib/sparsebit.c   |  18 +-
 tools/testing/selftests/kvm/lib/test_util.c   |  30 +-
 .../testing/selftests/kvm/lib/ucall_common.c  |  30 +-
 .../selftests/kvm/lib/userfaultfd_util.c      |  14 +-
 tools/testing/selftests/kvm/lib/x86/apic.c    |   2 +-
 tools/testing/selftests/kvm/lib/x86/hyperv.c  |  14 +-
 .../testing/selftests/kvm/lib/x86/memstress.c |  10 +-
 tools/testing/selftests/kvm/lib/x86/pmu.c     |   4 +-
 .../testing/selftests/kvm/lib/x86/processor.c | 178 +++++-----
 tools/testing/selftests/kvm/lib/x86/sev.c     |  14 +-
 tools/testing/selftests/kvm/lib/x86/svm.c     |  16 +-
 tools/testing/selftests/kvm/lib/x86/ucall.c   |   4 +-
 tools/testing/selftests/kvm/lib/x86/vmx.c     | 108 +++---
 .../kvm/memslot_modification_stress_test.c    |  10 +-
 .../testing/selftests/kvm/memslot_perf_test.c | 164 ++++-----
 tools/testing/selftests/kvm/mmu_stress_test.c |  28 +-
 .../selftests/kvm/pre_fault_memory_test.c     |  12 +-
 .../testing/selftests/kvm/riscv/arch_timer.c  |   8 +-
 .../testing/selftests/kvm/riscv/ebreak_test.c |   6 +-
 .../selftests/kvm/riscv/get-reg-list.c        |   2 +-
 .../selftests/kvm/riscv/sbi_pmu_test.c        |   8 +-
 tools/testing/selftests/kvm/s390/debug_test.c |   8 +-
 tools/testing/selftests/kvm/s390/memop.c      |  94 +++---
 tools/testing/selftests/kvm/s390/resets.c     |   6 +-
 .../selftests/kvm/s390/shared_zeropage_test.c |   2 +-
 tools/testing/selftests/kvm/s390/tprot.c      |  24 +-
 .../selftests/kvm/s390/ucontrol_test.c        |   2 +-
 .../selftests/kvm/set_memory_region_test.c    |  40 +--
 tools/testing/selftests/kvm/steal_time.c      |  52 +--
 .../kvm/system_counter_offset_test.c          |  12 +-
 tools/testing/selftests/kvm/x86/amx_test.c    |  14 +-
 .../selftests/kvm/x86/apic_bus_clock_test.c   |  24 +-
 tools/testing/selftests/kvm/x86/cpuid_test.c  |   6 +-
 tools/testing/selftests/kvm/x86/debug_regs.c  |   4 +-
 .../kvm/x86/dirty_log_page_splitting_test.c   |  16 +-
 .../selftests/kvm/x86/feature_msrs_test.c     |  12 +-
 .../selftests/kvm/x86/fix_hypercall_test.c    |  20 +-
 .../selftests/kvm/x86/flds_emulation.h        |   6 +-
 .../testing/selftests/kvm/x86/hwcr_msr_test.c |  10 +-
 .../testing/selftests/kvm/x86/hyperv_clock.c  |   6 +-
 .../testing/selftests/kvm/x86/hyperv_evmcs.c  |  10 +-
 .../kvm/x86/hyperv_extended_hypercalls.c      |  20 +-
 .../selftests/kvm/x86/hyperv_features.c       |  26 +-
 tools/testing/selftests/kvm/x86/hyperv_ipi.c  |  12 +-
 .../selftests/kvm/x86/hyperv_svm_test.c       |  10 +-
 .../selftests/kvm/x86/hyperv_tlb_flush.c      |  36 +-
 .../selftests/kvm/x86/kvm_clock_test.c        |  14 +-
 tools/testing/selftests/kvm/x86/kvm_pv_test.c |  10 +-
 .../selftests/kvm/x86/monitor_mwait_test.c    |   2 +-
 .../selftests/kvm/x86/nested_emulation_test.c |  20 +-
 .../kvm/x86/nested_exceptions_test.c          |   6 +-
 .../selftests/kvm/x86/nx_huge_pages_test.c    |  18 +-
 .../selftests/kvm/x86/platform_info_test.c    |   6 +-
 .../selftests/kvm/x86/pmu_counters_test.c     | 108 +++---
 .../selftests/kvm/x86/pmu_event_filter_test.c | 102 +++---
 .../kvm/x86/private_mem_conversions_test.c    |  78 ++---
 .../kvm/x86/private_mem_kvm_exits_test.c      |  14 +-
 .../selftests/kvm/x86/set_boot_cpu_id.c       |   6 +-
 .../selftests/kvm/x86/set_sregs_test.c        |   6 +-
 .../selftests/kvm/x86/sev_init2_tests.c       |   6 +-
 .../selftests/kvm/x86/sev_smoke_test.c        |  14 +-
 .../x86/smaller_maxphyaddr_emulation_test.c   |  10 +-
 tools/testing/selftests/kvm/x86/smm_test.c    |   8 +-
 tools/testing/selftests/kvm/x86/state_test.c  |  14 +-
 .../selftests/kvm/x86/svm_int_ctl_test.c      |   2 +-
 .../kvm/x86/svm_nested_shutdown_test.c        |   2 +-
 .../kvm/x86/svm_nested_soft_inject_test.c     |  10 +-
 .../selftests/kvm/x86/svm_vmcall_test.c       |   2 +-
 .../selftests/kvm/x86/sync_regs_test.c        |   2 +-
 .../kvm/x86/triple_fault_event_test.c         |   4 +-
 .../testing/selftests/kvm/x86/tsc_msrs_test.c |   2 +-
 .../selftests/kvm/x86/tsc_scaling_sync.c      |   4 +-
 .../selftests/kvm/x86/ucna_injection_test.c   |  45 +--
 .../selftests/kvm/x86/userspace_io_test.c     |   4 +-
 .../kvm/x86/userspace_msr_exit_test.c         |  58 ++--
 .../selftests/kvm/x86/vmx_apic_access_test.c  |   4 +-
 .../kvm/x86/vmx_close_while_nested_test.c     |   2 +-
 .../selftests/kvm/x86/vmx_dirty_log_test.c    |   4 +-
 .../kvm/x86/vmx_invalid_nested_guest_state.c  |   2 +-
 .../testing/selftests/kvm/x86/vmx_msrs_test.c |  22 +-
 .../kvm/x86/vmx_nested_tsc_scaling_test.c     |  26 +-
 .../selftests/kvm/x86/vmx_pmu_caps_test.c     |  12 +-
 .../kvm/x86/vmx_preemption_timer_test.c       |   2 +-
 .../selftests/kvm/x86/vmx_tsc_adjust_test.c   |  12 +-
 .../selftests/kvm/x86/xapic_ipi_test.c        |  58 ++--
 .../selftests/kvm/x86/xapic_state_test.c      |  20 +-
 .../selftests/kvm/x86/xcr0_cpuid_test.c       |   8 +-
 .../selftests/kvm/x86/xen_shinfo_test.c       |  22 +-
 .../testing/selftests/kvm/x86/xss_msr_test.c  |   2 +-
 161 files changed, 2323 insertions(+), 2338 deletions(-)

----------------------------------------------------------------------

New:  vsock/virtio: Linger on unsent data
[PATCH net-next v4 1/3] vsock/virtio: Linger on unsent data
Author: Michal Luczaj <mhal@rbox.co>

Currently vsock's lingering effectively boils down to waiting (or timing
out) until packets are consumed or dropped by the peer; be it by receiving
the data, closing or shutting down the connection.

To align with the semantics described in the SO_LINGER section of man
socket(7) and to mimic AF_INET's behaviour more closely, change the logic
of a lingering close(): instead of waiting for all data to be handled,
block until data is considered sent from the vsock's transport point of
view. That is until worker picks the packets for processing and decrements
virtio_vsock_sock::bytes_unsent down to 0.

Note that (some interpretation of) lingering was always limited to
transports that called virtio_transport_wait_close() on transport release.
This does not change, i.e. under Hyper-V and VMCI no lingering would be
observed.

The implementation does not adhere strictly to man page's interpretation of
SO_LINGER: shutdown() will not trigger the lingering. This follows AF_INET.

Signed-off-by: Michal Luczaj <mhal@rbox.co>
---
 net/vmw_vsock/virtio_transport_common.c | 4 +++-
 1 file changed, 3 insertions(+), 1 deletion(-)

----------------------------------------------------------------------

New:  vsock: SOCK_LINGER rework
[PATCH net-next v4 0/3] vsock: SOCK_LINGER rework
Author: Michal Luczaj <mhal@rbox.co>

Change vsock's lingerning to wait on close() until all data is sent, i.e.
until workers picked all the packets for processing.

Changes in v4:
- While in virtio, stick to virtio_transport_unsent_bytes() [Stefano]
- Squash the indentation reduction [Stefano]
- Pull SOCK_LINGER check into vsock_linger() [Stefano]
- Don't explicitly pass sk->sk_lingertime [Stefano]
- Link to v3: https://lore.kernel.org/r/20250430-vsock-linger-v3-0-ddbe73b53457@rbox.co

Changes in v3:
- Set "vsock/virtio" topic where appropriate
- Do not claim that Hyper-V and VMCI ever lingered [Stefano]
- Move lingering to af_vsock core [Stefano] 
- Link to v2: https://lore.kernel.org/r/20250421-vsock-linger-v2-0-fe9febd64668@rbox.co

Changes in v2:
- Comment that some transports do not implement unsent_bytes [Stefano]
- Reduce the indentation of virtio_transport_wait_close() [Stefano] 
- Do not linger on shutdown(), expand the commit messages [Paolo]
- Link to v1: https://lore.kernel.org/r/20250407-vsock-linger-v1-0-1458038e3492@rbox.co

Changes in v1:
- Do not assume `unsent_bytes()` is implemented by all transports [Stefano]
- Link to v0: https://lore.kernel.org/netdev/df2d51fd-03e7-477f-8aea-938446f47864@rbox.co/

Signed-off-by: Michal Luczaj <mhal@rbox.co>
---
Michal Luczaj (3):
      vsock/virtio: Linger on unsent data
      vsock: Move lingering logic to af_vsock core
      vsock/test: Expand linger test to ensure close() does not misbehave

 include/net/af_vsock.h                  |  1 +
 net/vmw_vsock/af_vsock.c                | 30 ++++++++++++++++++++++++++++++
 net/vmw_vsock/virtio_transport_common.c | 21 ++-------------------
 tools/testing/vsock/vsock_test.c        | 30 +++++++++++++++++++++++++++---
 4 files changed, 60 insertions(+), 22 deletions(-)

----------------------------------------------------------------------

New:  target/arm: Replace target_ulong -> uint64_t for HWBreakpoint
[PATCH v3 01/33] target/arm: Replace target_ulong -> uint64_t for HWBreakpoint
Author: Pierrick Bouvier <pierrick.bouvier@linaro.org>


CPUARMState::pc is of type uint64_t.

Reviewed-by: Pierrick Bouvier <pierrick.bouvier@linaro.org>
Reviewed-by: Alex Benn√©e <alex.bennee@linaro.org>
Signed-off-by: Philippe Mathieu-Daud√© <philmd@linaro.org>
Signed-off-by: Pierrick Bouvier <pierrick.bouvier@linaro.org>
---
 target/arm/internals.h   | 6 +++---
 target/arm/hyp_gdbstub.c | 6 +++---
 2 files changed, 6 insertions(+), 6 deletions(-)

----------------------------------------------------------------------

New:  single-binary: compile target/arm twice
[PATCH v3 00/33] single-binary: compile target/arm twice
Author: Pierrick Bouvier <pierrick.bouvier@linaro.org>

More work toward single-binary.

Some files have external dependencies for the single-binary:
- target/arm/machine.c: migration
- target/arm/gdbstub.c: gdbhelpers
- target/arm/arm-qmp-cmds.c: qapi
They will not be ported in this series.

Built on {linux, windows, macos} x {x86_64, aarch64}
Fully tested on linux-x86_64

v1
--

- target/arm/cpu.c

v2
--

- Remove duplication of kvm struct and constant (Alex)
- Use target_big_endian() (Anton)

v3
--

CI: https://github.com/pbo-linaro/qemu/actions/runs/14765763846/job/41456754153
- Add missing license for new files (Richard)
- target/arm/debug_helper.c
- target/arm/helper.c
- target/arm/vfp_fpscr.c
- target/arm/arch_dump.c
- target/arm/arm-powerctl.c
- target/arm/cortex-regs.c
- target/arm/ptw.c
- target/arm/kvm-stub.c

Philippe Mathieu-Daud√© (1):
  target/arm: Replace target_ulong -> uint64_t for HWBreakpoint

Pierrick Bouvier (32):
  include/system/hvf: missing vaddr include
  meson: add common libs for target and target_system
  target/arm: move kvm stubs and remove CONFIG_KVM from kvm_arm.h
  target/arm/kvm-stub: add kvm_arm_reset_vcpu stub
  target/arm/cpu: move arm_cpu_kvm_set_irq to kvm.c
  accel/hvf: add hvf_enabled() for common code
  target/arm/cpu: remove TARGET_BIG_ENDIAN dependency
  target/arm/cpu: remove TARGET_AARCH64 around aarch64_cpu_dump_state
    common
  target/arm/cpu: remove TARGET_AARCH64 in arm_cpu_finalize_features
  target/arm/cpu: compile file twice (user, system) only
  target/arm/cpu32-stubs.c: compile file twice (user, system)
  target/arm/helper: use i64 for exception_pc_alignment
  target/arm/helper: user i64 for probe_access
  target/arm/helper: extract common helpers
  target/arm/debug_helper: only include common helpers
  target/arm/debug_helper: remove target_ulong
  target/arm/debug_helper: compile file twice (user, system)
  target/arm/helper: restrict include to common helpers
  target/arm/helper: replace target_ulong by vaddr
  target/arm/helper: expose aarch64 cpu registration
  target/arm/helper: remove remaining TARGET_AARCH64
  target/arm/helper: compile file twice (user, system)
  target/arm/vfp_fpscr: compile file twice (user, system)
  target/arm/arch_dump: remove TARGET_AARCH64 conditionals
  target/arm/arch_dump: compile file once (system)
  target/arm/arm-powerctl: compile file once (system)
  target/arm/cortex-regs: compile file once (system)
  target/arm/ptw: replace target_ulong with uint64_t
  target/arm/ptw: remove TARGET_AARCH64 from arm_casq_ptw
  target/arm/ptw: compile file once (system)
  target/arm/meson: accelerator files are not needed in user mode
  target/arm/kvm-stub: compile file once (system)

 meson.build                    |   78 ++-
 include/system/hvf.h           |   15 +-
 target/arm/helper.h            | 1152 +------------------------------
 target/arm/internals.h         |    6 +-
 target/arm/kvm_arm.h           |   83 +--
 target/arm/tcg/helper.h        | 1153 ++++++++++++++++++++++++++++++++
 accel/hvf/hvf-stub.c           |    5 +
 target/arm/arch_dump.c         |    6 -
 target/arm/cpu.c               |   47 +-
 target/arm/cpu32-stubs.c       |   26 +
 target/arm/debug_helper.c      |    6 +-
 target/arm/helper.c            |   21 +-
 target/arm/hyp_gdbstub.c       |    6 +-
 target/arm/kvm-stub.c          |   87 +++
 target/arm/kvm.c               |   29 +
 target/arm/ptw.c               |   17 +-
 target/arm/tcg/op_helper.c     |    2 +-
 target/arm/tcg/tlb_helper.c    |    2 +-
 target/arm/tcg/translate-a64.c |    2 +-
 target/arm/tcg/translate.c     |    2 +-
 accel/hvf/meson.build          |    1 +
 target/arm/meson.build         |   43 +-
 22 files changed, 1436 insertions(+), 1353 deletions(-)

----------------------------------------------------------------------

New:  x86/msr: Add missing includes of <asm/msr.h>
[PATCH v4A 01/15] x86/msr: Add missing includes of <asm/msr.h>
Author: Xin Li (Intel) <xin@zytor.com>

For some reason, there are some TSC-related functions in the MSR
header even though there is a tsc.h header.

To facilitate the relocation of rdtsc{,_ordered}() from <asm/msr.h>
to <asm/tsc.h> and to eventually eliminate the inclusion of
<asm/msr.h> in <asm/tsc.h>, add <asm/msr.h> to the source files that
reference definitions from <asm/msr.h>.

Signed-off-by: Xin Li (Intel) <xin@zytor.com>
Acked-by: Dave Hansen <dave.hansen@linux.intel.com>
Acked-by: Peter Zijlstra (Intel) <peterz@infradead.org>
Acked-by: Ilpo J√§rvinen <ilpo.jarvinen@linux.intel.com>
---

Change in v4A:
*) Use "git grep -l -e $PATTERN | grep -v -f <(git grep -l -e 'asm/msr\.h')"
   to ensure ALL required *direct* inclusion of <asm/msr.h> (Ilpo J√§rvinen).

Change in v4:
*) Add missing includes in a different patch (Ilpo J√§rvinen).
*) Add all necessary direct inclusions for msr.h (Ilpo J√§rvinen).

Change in v3:
* Add a problem statement to the changelog (Dave Hansen).
---
 arch/x86/coco/sev/core.c                                    | 1 +
 arch/x86/events/amd/core.c                                  | 1 +
 arch/x86/events/amd/ibs.c                                   | 1 +
 arch/x86/events/amd/iommu.c                                 | 2 ++
 arch/x86/events/amd/lbr.c                                   | 1 +
 arch/x86/events/amd/power.c                                 | 1 +
 arch/x86/events/core.c                                      | 1 +
 arch/x86/events/intel/bts.c                                 | 1 +
 arch/x86/events/intel/core.c                                | 1 +
 arch/x86/events/intel/cstate.c                              | 1 +
 arch/x86/events/intel/ds.c                                  | 1 +
 arch/x86/events/intel/knc.c                                 | 1 +
 arch/x86/events/intel/p4.c                                  | 1 +
 arch/x86/events/intel/p6.c                                  | 1 +
 arch/x86/events/intel/pt.c                                  | 1 +
 arch/x86/events/intel/uncore.c                              | 1 +
 arch/x86/events/intel/uncore_discovery.c                    | 1 +
 arch/x86/events/intel/uncore_nhmex.c                        | 1 +
 arch/x86/events/intel/uncore_snb.c                          | 1 +
 arch/x86/events/intel/uncore_snbep.c                        | 1 +
 arch/x86/events/msr.c                                       | 2 ++
 arch/x86/events/perf_event.h                                | 1 +
 arch/x86/events/probe.c                                     | 2 ++
 arch/x86/events/rapl.c                                      | 1 +
 arch/x86/events/utils.c                                     | 1 +
 arch/x86/events/zhaoxin/core.c                              | 1 +
 arch/x86/hyperv/hv_apic.c                                   | 1 +
 arch/x86/hyperv/hv_init.c                                   | 1 +
 arch/x86/hyperv/hv_spinlock.c                               | 1 +
 arch/x86/hyperv/hv_vtl.c                                    | 1 +
 arch/x86/hyperv/ivm.c                                       | 1 +
 arch/x86/include/asm/fred.h                                 | 1 +
 arch/x86/include/asm/kvm_host.h                             | 1 +
 arch/x86/include/asm/microcode.h                            | 2 ++
 arch/x86/include/asm/mshyperv.h                             | 1 +
 arch/x86/include/asm/msr.h                                  | 1 +
 arch/x86/include/asm/resctrl.h                              | 2 ++
 arch/x86/include/asm/suspend_32.h                           | 1 +
 arch/x86/include/asm/suspend_64.h                           | 1 +
 arch/x86/include/asm/switch_to.h                            | 2 ++
 arch/x86/kernel/acpi/sleep.c                                | 1 +
 arch/x86/kernel/amd_nb.c                                    | 1 +
 arch/x86/kernel/apic/apic.c                                 | 1 +
 arch/x86/kernel/apic/apic_numachip.c                        | 1 +
 arch/x86/kernel/cet.c                                       | 1 +
 arch/x86/kernel/cpu/amd.c                                   | 1 +
 arch/x86/kernel/cpu/aperfmperf.c                            | 1 +
 arch/x86/kernel/cpu/bus_lock.c                              | 1 +
 arch/x86/kernel/cpu/feat_ctl.c                              | 1 +
 arch/x86/kernel/cpu/hygon.c                                 | 1 +
 arch/x86/kernel/cpu/mce/inject.c                            | 1 +
 arch/x86/kernel/cpu/microcode/core.c                        | 1 +
 arch/x86/kernel/cpu/mshyperv.c                              | 1 +
 arch/x86/kernel/cpu/resctrl/core.c                          | 1 +
 arch/x86/kernel/cpu/resctrl/monitor.c                       | 1 +
 arch/x86/kernel/cpu/resctrl/pseudo_lock.c                   | 1 +
 arch/x86/kernel/cpu/resctrl/rdtgroup.c                      | 1 +
 arch/x86/kernel/cpu/sgx/main.c                              | 1 +
 arch/x86/kernel/cpu/topology.c                              | 1 +
 arch/x86/kernel/cpu/topology_amd.c                          | 1 +
 arch/x86/kernel/cpu/tsx.c                                   | 1 +
 arch/x86/kernel/cpu/zhaoxin.c                               | 1 +
 arch/x86/kernel/fpu/core.c                                  | 1 +
 arch/x86/kernel/fpu/xstate.c                                | 1 +
 arch/x86/kernel/fpu/xstate.h                                | 1 +
 arch/x86/kernel/fred.c                                      | 1 +
 arch/x86/kernel/hpet.c                                      | 1 +
 arch/x86/kernel/kvm.c                                       | 1 +
 arch/x86/kernel/paravirt.c                                  | 1 +
 arch/x86/kernel/process.c                                   | 1 +
 arch/x86/kernel/process_64.c                                | 1 +
 arch/x86/kernel/trace_clock.c                               | 2 +-
 arch/x86/kernel/traps.c                                     | 1 +
 arch/x86/kernel/tsc.c                                       | 1 +
 arch/x86/kernel/tsc_sync.c                                  | 1 +
 arch/x86/kvm/svm/avic.c                                     | 1 +
 arch/x86/kvm/svm/sev.c                                      | 1 +
 arch/x86/kvm/svm/svm.c                                      | 1 +
 arch/x86/kvm/vmx/nested.c                                   | 1 +
 arch/x86/kvm/vmx/pmu_intel.c                                | 1 +
 arch/x86/kvm/vmx/sgx.c                                      | 1 +
 arch/x86/kvm/vmx/vmx.c                                      | 1 +
 arch/x86/lib/insn-eval.c                                    | 1 +
 arch/x86/lib/kaslr.c                                        | 2 +-
 arch/x86/mm/mem_encrypt_identity.c                          | 1 +
 arch/x86/mm/tlb.c                                           | 1 +
 arch/x86/pci/amd_bus.c                                      | 1 +
 arch/x86/pci/mmconfig-shared.c                              | 3 ++-
 arch/x86/power/cpu.c                                        | 1 +
 arch/x86/realmode/init.c                                    | 1 +
 arch/x86/virt/svm/sev.c                                     | 1 +
 arch/x86/xen/enlighten_pv.c                                 | 1 +
 arch/x86/xen/pmu.c                                          | 1 +
 arch/x86/xen/suspend.c                                      | 1 +
 drivers/accel/habanalabs/common/habanalabs_ioctl.c          | 2 --
 drivers/acpi/acpi_extlog.c                                  | 1 +
 drivers/acpi/processor_perflib.c                            | 1 +
 drivers/acpi/processor_throttling.c                         | 6 +++++-
 drivers/char/agp/nvidia-agp.c                               | 1 +
 drivers/cpufreq/amd-pstate-ut.c                             | 2 ++
 drivers/cpufreq/elanfreq.c                                  | 1 -
 drivers/cpufreq/sc520_freq.c                                | 1 -
 drivers/crypto/ccp/sev-dev.c                                | 1 +
 drivers/edac/amd64_edac.c                                   | 1 +
 drivers/edac/ie31200_edac.c                                 | 1 +
 drivers/edac/mce_amd.c                                      | 1 +
 drivers/hwmon/hwmon-vid.c                                   | 4 ++++
 drivers/idle/intel_idle.c                                   | 1 +
 drivers/misc/cs5535-mfgpt.c                                 | 1 +
 drivers/net/vmxnet3/vmxnet3_drv.c                           | 4 ++++
 drivers/platform/x86/intel/ifs/core.c                       | 1 +
 drivers/platform/x86/intel/ifs/load.c                       | 1 +
 drivers/platform/x86/intel/ifs/runtest.c                    | 1 +
 drivers/platform/x86/intel/pmc/cnp.c                        | 1 +
 drivers/platform/x86/intel/speed_select_if/isst_if_common.c | 1 +
 .../platform/x86/intel/speed_select_if/isst_if_mbox_msr.c   | 1 +
 drivers/platform/x86/intel/speed_select_if/isst_tpmi_core.c | 1 +
 drivers/platform/x86/intel/turbo_max_3.c                    | 1 +
 .../platform/x86/intel/uncore-frequency/uncore-frequency.c  | 1 +
 drivers/powercap/intel_rapl_common.c                        | 1 +
 drivers/powercap/intel_rapl_msr.c                           | 1 +
 .../intel/int340x_thermal/processor_thermal_device.c        | 1 +
 drivers/thermal/intel/intel_tcc_cooling.c                   | 1 +
 drivers/thermal/intel/x86_pkg_temp_thermal.c                | 1 +
 drivers/video/fbdev/geode/display_gx.c                      | 1 +
 drivers/video/fbdev/geode/gxfb_core.c                       | 1 +
 drivers/video/fbdev/geode/lxfb_ops.c                        | 1 +
 127 files changed, 142 insertions(+), 8 deletions(-)

----------------------------------------------------------------------

New:  KVM: selftests: Use $(SRCARCH) instead of $(ARCH)
[PATCH] KVM: selftests: Use $(SRCARCH) instead of $(ARCH)
Author: David Matlack <dmatlack@google.com>

Use $(SRCARCH) in Makefile.kvm instead of $(ARCH). The former may have
been set on the command line and thus make will ignore the variable
assignment to convert x86_64 to x86.

Introduce $(SRCARCH) rather than just reverting commit 9af04539d474
("KVM: selftests: Override ARCH for x86_64 instead of using ARCH_DIR")
to keep KVM selftests consistent with the top-level kernel Makefile,
which uses $(SRCARCH) for the exact same purpose.

While here, drop the comment about the top-level selftests allowing
ARCH=x86_64. The kernel itself allows/expects ARCH=x86_64 so it's
reasonable to expect the KVM selftests to handle it as well.

Fixes: 9af04539d474 ("KVM: selftests: Override ARCH for x86_64 instead of using ARCH_DIR")
Signed-off-by: David Matlack <dmatlack@google.com>
---
 tools/testing/selftests/kvm/Makefile     | 10 +++++----
 tools/testing/selftests/kvm/Makefile.kvm | 26 ++++++++++++------------
 2 files changed, 19 insertions(+), 17 deletions(-)

----------------------------------------------------------------------

